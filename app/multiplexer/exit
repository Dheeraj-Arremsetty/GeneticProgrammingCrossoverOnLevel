Script started on Fri 20 Oct 2017 05:31:24 PM CDT
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[?1034h[dawdf@delmar multiplexer]$ ls
app.c       change.o    exch.o      genspace.o   main.o     multi_script1.e.bst  multi.stt     populate.o  tournmnt.o
appdef.h    ckpoint.o   exit        GNUmakefile  memory.o   multi_script1.e.gen  multi.sys     pretty.o    tree.o
app.h       crossovr.o  fitness.o   [0m[38;5;34mgp[0m           multi.bst  multi_script1.e.his  mutate.o      random.o
app.o       ephem.o     function.c  gp.o         multi.gen  multi_script1.e.prg  [38;5;27moutput_files[0m  reproduc.o
bstworst.o  eval.o      function.h  individ.o    multi.his  multi_script1.e.stt  output.o      script1.e
cgp_czj.o   event.o     function.o  input.file   multi.prg  multi_script1.e.sys  params.o      select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd 1.`[Ke/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ ls
multi_script1.e.bst  multi_script1.e.his  multi_script1.e.stt  script1.e
multi_script1.e.gen  multi_script1.e.prg  multi_script1.e.sys
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ rm -rf *
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ ls
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c       change.o    exch.o      genspace.o   main.o     multi_script1.e.bst  multi.stt     populate.o  tournmnt.o
appdef.h    ckpoint.o   exit        GNUmakefile  memory.o   multi_script1.e.gen  multi.sys     pretty.o    tree.o
app.h       crossovr.o  fitness.o   [0m[38;5;34mgp[0m           multi.bst  multi_script1.e.his  mutate.o      random.o
app.o       ephem.o     function.c  gp.o         multi.gen  multi_script1.e.prg  [38;5;27moutput_files[0m  reproduc.o
bstworst.o  eval.o      function.h  individ.o    multi.his  multi_script1.e.stt  output.o      script1.e
cgp_czj.o   event.o     function.o  input.file   multi.prg  multi_script1.e.sys  params.o      select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ mv script1.e ./output_files/1.e/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ mc[Kv mutlu[Ki_dc[K[Kscr[K[K[K[K[K[K[Klti_script1.e.([K* ./
app.c                ephem.o              genspace.o           multi.gen            multi.stt            reproduc.o
appdef.h             eval.o               GNUmakefile          multi.his            multi.sys            select.o
app.h                event.o              gp                   multi.prg            mutate.o             tournmnt.o
app.o                exch.o               gp.o                 multi_script1.e.bst  output_files/        tree.o
bstworst.o           exit                 individ.o            multi_script1.e.gen  output.o             
cgp_czj.o            fitness.o            input.file           multi_script1.e.his  params.o             
change.o             function.c           main.o               multi_script1.e.prg  populate.o           
ckpoint.o            function.h           memory.o             multi_script1.e.stt  pretty.o             
crossovr.o           function.o           multi.bst            multi_script1.e.sys  random.o             
[dawdf@delmar multiplexer]$ mv multi_script1.e.* ./output_files/
1.a/           1.b/           1.c/           1.d/           1.e/           data_old.tar   question1.tar  
[dawdf@delmar multiplexer]$ mv multi_script1.e.* ./output_files/
1.a/           1.b/           1.c/           1.d/           1.e/           data_old.tar   question1.tar  
[dawdf@delmar multiplexer]$ mv multi_script1.e.* ./output_files/1.e/script1.e [K[K[K[K[K[K[K[K[K[K
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ tar -cvf * question1_final.tar
tar: 1.a: Cannot open: Is a directory
tar: Error is not recoverable: exiting now
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ tar -cvf * question1_final.tar[1P question1_final.tar[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C *
1.a/
1.a/multi_script1.a.bst
1.a/multi_script1.a.gen
1.a/multi_script1.a.his
1.a/multi_script1.a.prg
1.a/multi_script1.a.stt
1.a/multi_script1.a.sys
1.a/script1.a
1.a/script1.a.tar
1.b/
1.b/multi_script1.b.bst
1.b/multi_script1.b.gen
1.b/multi_script1.b.his
1.b/multi_script1.b.prg
1.b/multi_script1.b.sys
1.b/script1.b
1.b/multi_script1.b.stt
1.c/
1.c/multi_script1.c.bst
1.c/multi_script1.c.gen
1.c/multi_script1.c.his
1.c/multi_script1.c.prg
1.c/multi_script1.c.sys
1.c/script1.c
1.c/multi_script1.c.stt
1.d/
1.d/multi_script1.d.bst
1.d/multi_script1.d.gen
1.d/multi_script1.d.his
1.d/multi_script1.d.prg
1.d/multi_script1.d.sys
1.d/script1.d
1.d/multi_script1.d.stt
1.e/
1.e/script1.e
1.e/multi_script1.e.bst
1.e/multi_script1.e.gen
1.e/multi_script1.e.his
1.e/multi_script1.e.prg
1.e/multi_script1.e.stt
1.e/multi_script1.e.sys
data_old.tar
question1.tar
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ mk dir[K[K[K[Kdit te[K[K[K[Kr test
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cp question11[K_final.tar ./test/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m  [38;5;27mtest[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd test/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ ls
[0m[38;5;9mquestion1_final.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ tar -xvf question1_final.tar 
1.a/
1.a/multi_script1.a.bst
1.a/multi_script1.a.gen
1.a/multi_script1.a.his
1.a/multi_script1.a.prg
1.a/multi_script1.a.stt
1.a/multi_script1.a.sys
1.a/script1.a
1.a/script1.a.tar
1.b/
1.b/multi_script1.b.bst
1.b/multi_script1.b.gen
1.b/multi_script1.b.his
1.b/multi_script1.b.prg
1.b/multi_script1.b.sys
1.b/script1.b
1.b/multi_script1.b.stt
1.c/
1.c/multi_script1.c.bst
1.c/multi_script1.c.gen
1.c/multi_script1.c.his
1.c/multi_script1.c.prg
1.c/multi_script1.c.sys
1.c/script1.c
1.c/multi_script1.c.stt
1.d/
1.d/multi_script1.d.bst
1.d/multi_script1.d.gen
1.d/multi_script1.d.his
1.d/multi_script1.d.prg
1.d/multi_script1.d.sys
1.d/script1.d
1.d/multi_script1.d.stt
1.e/
1.e/script1.e
1.e/multi_script1.e.bst
1.e/multi_script1.e.gen
1.e/multi_script1.e.his
1.e/multi_script1.e.prg
1.e/multi_script1.e.stt
1.e/multi_script1.e.sys
data_old.tar
question1.tar
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ cd [K[K[Kcar [K[Kt 1.e/
multi_script1.e.bst  multi_script1.e.his  multi_script1.e.stt  script1.e            
multi_script1.e.gen  multi_script1.e.prg  multi_script1.e.sys  
[dawdf@delmar test]$ cat 1.e/script1.e 
Script started on Fri 20 Oct 2017 05:27:19 PM CDT
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[?1034h[dawdf@delmar multiplexer]$ ./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: and or not if a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























4 ordinary functions: 
    0 = and
    1 = or
    2 = not
    3 = if
11 terminals (ordinary and ephemeral): 
    4 = a0
    5 = a1
    6 = a2
    7 = d0
    8 = d1
    9 = d2
   10 = d3
   11 = d4
   12 = d5
   13 = d6
   14 = d7
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=and:
	F_and (exclusions) [0..3] = 
	F_and_0 (exclusions) [0..14] = 
	T_and_0 (inclusions) [0..14] = 3
	F_and_1 (exclusions) [0..14] = 
	T_and_1 (inclusions) [0..14] = 3

























4 ordinary functions: 
    0 = and
    1 = or
    2 = not
    3 = if
11 terminals (ordinary and ephemeral): 
    4 = a0
    5 = a1
    6 = a2
    7 = d0
    8 = d1
    9 = d2
   10 = d3
   11 = d4
   12 = d5
   13 = d6
   14 = d7
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=or:
	F_or (exclusions) [0..3] = 
	F_or_0 (exclusions) [0..14] = 
	T_or_0 (inclusions) [0..14] = 3
	F_or_1 (exclusions) [0..14] = 
	T_or_1 (inclusions) [0..14] = 3

























4 ordinary functions: 
    0 = and
    1 = or
    2 = not
    3 = if
11 terminals (ordinary and ephemeral): 
    4 = a0
    5 = a1
    6 = a2
    7 = d0
    8 = d1
    9 = d2
   10 = d3
   11 = d4
   12 = d5
   13 = d6
   14 = d7
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=not:
	F_not (exclusions) [0..3] = 
	F_not_0 (exclusions) [0..14] = 
	T_not_0 (inclusions) [0..14] = 3

























4 ordinary functions: 
    0 = and
    1 = or
    2 = not
    3 = if
11 terminals (ordinary and ephemeral): 
    4 = a0
    5 = a1
    6 = a2
    7 = d0
    8 = d1
    9 = d2
   10 = d3
   11 = d4
   12 = d5
   13 = d6
   14 = d7
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 3=if:
	F_if (exclusions) [0..3] = 
	F_if_0 (exclusions) [0..14] = 
	T_if_0 (inclusions) [0..14] = 4 5 6
	F_if_1 (exclusions) [0..14] = 
	T_if_1 (inclusions) [0..14] = 3 7 8 9 10 11 12 13 14
	F_if_2 (exclusions) [0..14] = 
	T_if_2 (inclusions) [0..14] = 3 7 8 9 10 11 12 13 14

























4 ordinary functions: 
    0 = and
    1 = or
    2 = not
    3 = if
11 terminals (ordinary and ephemeral): 
    4 = a0
    5 = a1
    6 = a2
    7 = d0
    8 = d1
    9 = d2
   10 = d3
   11 = d4
   12 = d5
   13 = d6
   14 = d7
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..14] = 
	T^Root (inclusions) [0..14] = 3

The normal constraints are...


		CONSTRAINTS
Function "and" [#0]:
	F_and_0 [#Fs=3:#Ts=11] = and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
	F_and_1 [#Fs=3:#Ts=11] = and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
Function "or" [#1]:
	F_or_0 [#Fs=3:#Ts=11] = and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
	F_or_1 [#Fs=3:#Ts=11] = and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
Function "not" [#2]:
	F_not_0 [#Fs=3:#Ts=11] = and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7
Function "if" [#3]:
	F_if_0 [#Fs=4:#Ts=8] = and or not if || d0 d1 d2 d3 d4 d5 d6 d7
	F_if_1 [#Fs=3:#Ts=3] = and or not || a0 a1 a2
	F_if_2 [#Fs=3:#Ts=3] = and or not || a0 a1 a2
Root:
	F_Root [#Fs=3:#Ts=11] =  and or not || a0 a1 a2 d0 d1 d2 d3 d4 d5 d6 d7


The following mutation sets were computed...

Function "and" [#0]: 2 mutation set pairs
	Argument 0:
		F [1 members] = if
		T [0 members] =
	Argument 1:
		F [1 members] = if
		T [0 members] =

Function "or" [#1]: 2 mutation set pairs
	Argument 0:
		F [1 members] = if
		T [0 members] =
	Argument 1:
		F [1 members] = if
		T [0 members] =

Function "not" [#2]: 1 mutation set pairs
	Argument 0:
		F [1 members] = if
		T [0 members] =

Function "if" [#3]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [3 members] = a0 a1 a2
	Argument 1:
		F [1 members] = if
		T [8 members] = d0 d1 d2 d3 d4 d5 d6 d7
	Argument 2:
		F [1 members] = if
		T [8 members] = d0 d1 d2 d3 d4 d5 d6 d7

Root:
		F [1 members] = if
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 0

Function "and" [#0]: 2 mutation set pairs
Argument 0:
	F [1 members] = if
	T [0 members] =

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...
Argument 1:
	F [1 members] = if
	T [0 members] =

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...



Function "or" [#1]: 2 mutation set pairs
Argument 0:
	F [1 members] = if
	T [0 members] =

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...
Argument 1:
	F [1 members] = if
	T [0 members] =

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...



Function "not" [#2]: 1 mutation set pairs
Argument 0:
	F [1 members] = if
	T [0 members] =

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...



Function "if" [#3]: 3 mutation set pairs
Argument 0:
	F [0 members] =
	T [3 members] = a0 a1 a2

	Reading the weights for type I functions...

	Reading the weights for type II/III terminals...
	Terminal "a0" [4]: give weight (0,1]: 1
	Terminal "a1" [5]: give weight (0,1]: 1
	Terminal "a2" [6]: give weight (0,1]: 1
Argument 1:
	F [1 members] = if
	T [8 members] = d0 d1 d2 d3 d4 d5 d6 d7

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 0.0 33

	Reading the weights for type II/III terminals...
	Terminal "d0" [7]: give weight (0,1]: 0.084
	Terminal "d1" [8]: give weight (0,1]: 0.084
	Terminal "d2" [9]: give weight (0,1]: 0.084
	Terminal "d3" [10]: give weight (0,1]: 0.084
	Terminal "d4" [11]: give weight (0,1]: 0.084
	Terminal "d5" [12]: give weight (0,1]: 0.084
	Terminal "d6" [13]: give weight (0,1]: 0.084
	Terminal "d7" [14]: give weight (0,1]: 0.084
Argument 2:
	F [1 members] = if
	T [8 members] = d0 d1 d2 d3 d4 d5 d6 d7

	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 0.33

	Reading the weights for type II/III terminals...
	Terminal "d0" [7]: give weight (0,1]: 0.084
	Terminal "d1" [8]: give weight (0,1]: 0.084
	Terminal "d2" [9]: give weight (0,1]: 0.084
	Terminal "d3" [10]: give weight (0,1]: 0.084
	Terminal "d4" [11]: give weight (0,1]: 0.084
	Terminal "d5" [12]: give weight (0,1]: 0.084
	Terminal "d6" [13]: give weight (0,1]: 0.084
	Terminal "d7" [14]: give weight (0,1]: 0.084


Root:
		F [1 members] = if
		T [0 members] =
	Reading the weights for type I functions...
	Function "if" [3]: give weight (0,1]: 1

	Reading the weights for type II/III terminals...



Wheels are...


These are weights/wheels...

Function "and" [#0]: 2 arguments
	Argument 0: F [1 members, used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [1 members, used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Function "or" [#1]: 2 arguments
	Argument 0: F [1 members, used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [1 members, used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Function "not" [#2]: 1 arguments
	Argument 0: F [1 members, used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Function "if" [#3]: 3 arguments
	Argument 0: F [0 members, not used]  and T [3 members, used]
	Weights: -1.000 -1.000 -1.000 -1.000 1.000 1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000 2.000 3.000
	Argument 1: F [1 members, used]  and T [8 members, used]
	Weights: -1.000 -1.000 -1.000 0.330 -1.000 -1.000 -1.000 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.084
	Wheels: 0.330 0.414 0.498 0.582 0.666 0.750 0.834 0.918 1.002
	Argument 2: F [1 members, used]  and T [8 members, used]
	Weights: -1.000 -1.000 -1.000 0.330 -1.000 -1.000 -1.000 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.084
	Wheels: 0.330 0.414 0.498 0.582 0.666 0.750 0.834 0.918 1.002

Root: F [1 members, used] and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    116 trees were generated to fill the population of 100 (100 trees).
    110 trees were generated to fill the population of 100 (100 trees).
    117 trees were generated to fill the population of 100 (100 trees).
    112 trees were generated to fill the population of 100 (100 trees).
    117 trees were generated to fill the population of 100 (100 trees).
    111 trees were generated to fill the population of 100 (100 trees).
    115 trees were generated to fill the population of 100 (100 trees).
    111 trees were generated to fill the population of 100 (100 trees).
    111 trees were generated to fill the population of 100 (100 trees).
    112 trees were generated to fill the population of 100 (100 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.02s wall, 0.02s user, 0.00s sys)
=== generation 1.
    evaluation complete.  (0.44s wall, 0.44s user, 0.00s sys)
    breeding complete.    (0.02s wall, 0.02s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.02s wall, 0.03s user, 0.00s sys)
=== generation 3.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.03s wall, 0.03s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.46s wall, 0.46s user, 0.00s sys)
    breeding complete.    (0.03s wall, 0.03s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.47s wall, 0.47s user, 0.00s sys)
    breeding complete.    (0.03s wall, 0.03s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.46s wall, 0.45s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      154263961
               freed:      154263961
           not freed:      0
       max allocated:      15884181
    malloc'ed blocks:      22846
   realloc'ed blocks:      21
      free'ed blocks:      22846

------- time -------
             overall:      227.00s wall, 3.61s user, 0.02s sys
          evaluation:      3.39s wall, 3.38s user, 0.00s sys
            breeding:      0.15s wall, 0.16s user, 0.01s sys

------- generation spaces -------
      space   0 size:      1600
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ scrit[Kpt w[Kexit
Script started, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[?1034h[dawdf@delmar multiplexer]$ ls
app.c       change.o    exch.o      genspace.o   main.o     multi_script1.e.bst  multi.stt     populate.o  tournmnt.o
appdef.h    ckpoint.o   exit        GNUmakefile  memory.o   multi_script1.e.gen  multi.sys     pretty.o    tree.o
app.h       crossovr.o  fitness.o   [0m[38;5;34mgp[0m           multi.bst  multi_script1.e.his  mutate.o      random.o
app.o       ephem.o     function.c  gp.o         multi.gen  multi_script1.e.prg  [38;5;27moutput_files[0m  reproduc.o
bstworst.o  eval.o      function.h  individ.o    multi.his  multi_script1.e.stt  output.o      script1.e
cgp_czj.o   event.o     function.o  input.file   multi.prg  multi_script1.e.sys  params.o      select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd 1.`[Ke/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ ls
multi_script1.e.bst  multi_script1.e.his  multi_script1.e.stt  script1.e
multi_script1.e.gen  multi_script1.e.prg  multi_script1.e.sys
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ rm -rf *
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ ls
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c       change.o    exch.o      genspace.o   main.o     multi_script1.e.bst  multi.stt     populate.o  tournmnt.o
appdef.h    ckpoint.o   exit        GNUmakefile  memory.o   multi_script1.e.gen  multi.sys     pretty.o    tree.o
app.h       crossovr.o  fitness.o   [0m[38;5;34mgp[0m           multi.bst  multi_script1.e.his  mutate.o      random.o
app.o       ephem.o     function.c  gp.o         multi.gen  multi_script1.e.prg  [38;5;27moutput_files[0m  reproduc.o
bstworst.o  eval.o      function.h  individ.o    multi.his  multi_script1.e.stt  output.o      script1.e
cgp_czj.o   event.o     function.o  input.file   multi.prg  multi_script1.e.sys  params.o      select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ mv script1.e ./output_files/1.e/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ mc[Kv mutlu[Ki_dc[K[Kscr[K[K[K[K[K[K[Klti_script1.e.([K* ./
app.c                ephem.o              genspace.o           multi.gen            multi.stt            reproduc.o
appdef.h             eval.o          ]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ cd .
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/test[dawdf@delmar test]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m  [38;5;27mtest[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m  [38;5;27mtest[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ rm -rf test/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ ls
[0m[38;5;27mant[0m  [38;5;27mlawnmower[0m  [38;5;27mmultiplexer[0m  [38;5;27mregression[0m  [38;5;27mskeleton[0m  [38;5;27mtwobox[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ cd ant/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.b.stt  ant_script2.e.sys  cgp_czj.o   exch.o       [0m[38;5;34mgp[0m            mutate.o      reproduc.o
ant.his            ant_script2.b.sys  ant.sys            change.o    fitness.o    gp.o          [38;5;27moutput_files[0m  santafe.trl
ant.prg            ant_script2.e.bst  app.c              ckpoint.o   function.c   individ.o     output.o      script2.e
ant_script2.b.bst  ant_script2.e.gen  appdef.h           crossovr.o  function.h   input.file    params.o      select.o
ant_script2.b.gen  ant_script2.e.his  app.h              ephem.o     function.o   losaltos.trl  populate.o    tournmnt.o
ant_script2.b.his  ant_script2.e.prg  app.o              eval.o      genspace.o   main.o        pretty.o      tree.o
ant_script2.b.prg  ant_script2.e.stt  bstworst.o         event.o     GNUmakefile  memory.o      random.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.e [K[Ka
Script started, file is script2.a
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ ./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 0 1   
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 0 1 2 3 4 
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4^[[C     4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 0 1 2 3 4         
	T^Root (inclusions) [0..5] = 0 1 2 3 4

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=0:#Ts=1] = || left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || left
Function "progn2" [#1]:
	F_progn2_0 [#Fs=0:#Ts=1] = || left
	F_progn2_1 [#Fs=0:#Ts=1] = || left
Function "progn3" [#2]:
	F_progn3_0 [#Fs=0:#Ts=1] = || left
	F_progn3_1 [#Fs=0:#Ts=1] = || left
	F_progn3_2 [#Fs=0:#Ts=1] = || left
Root:
	F_Root [#Fs=0:#Ts=1] =  || left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Root:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Root: F [3 members, used] and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (2.38s wall, 2.23s user, 0.14s sys)
=== generation 1.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (2.64s wall, 2.62s user, 0.02s sys)
=== generation 2.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (2.59s wall, 2.57s user, 0.02s sys)
=== generation 3.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (2.50s wall, 2.49s user, 0.02s sys)
=== generation 4.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (2.37s wall, 2.37s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (2.15s wall, 2.15s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (1.89s wall, 1.89s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.78s wall, 1.77s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.72s wall, 1.72s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.58s wall, 1.58s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.53s wall, 1.53s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.56s wall, 0.56s user, 0.01s sys)
    breeding complete.    (1.52s wall, 1.52s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.52s wall, 1.53s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.51s wall, 1.51s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.51s wall, 1.50s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.51s wall, 1.52s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.55s wall, 1.55s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.56s wall, 1.55s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.57s wall, 1.57s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.57s wall, 1.57s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.60s wall, 1.60s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.61s wall, 1.61s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.62s wall, 1.62s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.64s wall, 1.64s user, 0.00s sys)
=== generation 24.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.70s wall, 1.70s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.71s wall, 1.71s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.76s wall, 1.76s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.72s wall, 1.72s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.75s wall, 1.76s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.76s wall, 1.76s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.79s wall, 1.79s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (1.81s wall, 1.81s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.82s wall, 1.83s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.86s wall, 1.86s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.89s wall, 1.88s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.93s wall, 1.93s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.94s wall, 1.94s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.94s wall, 1.94s user, 0.00s sys)
=== generation 38.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      1231719253
               freed:      1231719253
           not freed:      0
       max allocated:      588925613
    malloc'ed blocks:      1751036
   realloc'ed blocks:      59
      free'ed blocks:      1751036

------- time -------
             overall:      214.75s wall, 98.97s user, 0.38s sys
          evaluation:      22.06s wall, 22.02s user, 0.01s sys
            breeding:      68.80s wall, 68.60s user, 0.20s sys

------- generation spaces -------
      space   0 size:      5300
      space   1 size:      200
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script exit
Script started, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 787C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.d

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8

[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;116H4,0-1[14;1H[?12l[?25h[?25l[28;116H5,1  [15;1H[?12l[?25h[?25l[28;116H6[16;1H[?12l[?25h[?25l[28;116H7[17;1H[?12l[?25h[?25l[28;116H8,0-1[18;1H[?12l[?25h[?25l[28;116H9,1  [19;1H[?12l[?25h[?25l[28;115H20[20;1H[?12l[?25h[?25l[28;116H1[21;1H[?12l[?25h[?25l[28;116H2[22;1H[?12l[?25h[?25l[28;116H3[23;1H[?12l[?25h[?25l[28;116H4,0-1[24;1H[?12l[?25h[?25l[28;116H5,1  [25;1H[?12l[?25h[?25l[28;116H6,0-1[26;1H[?12l[?25h[?25l[28;116H7,1  [27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[1].rate = 0.85[28;1H[K[28;115H28,1[11C9%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H29,0-1[8C18%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[2].operator = reproduction, select=(tournament, size=7)[28;115H[K[28;115H30,1[10C27%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[2].rate = 0.05[28;115H[K[28;115H31,1[10C36%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H32,1[10C45%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[3].operator = mutation, select=(tournament, size=7)[28;115H[K[28;115H33,1[10C54%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[3].rate = 0.10[28;115H[K[28;115H34,1[10C63%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H35,1[10C72%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[4].operator = reproduction, select = best[28;115H[K[28;115H36,1[10C81%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[4].rate = 0.0001[28;115H[K[28;115H37,1[10C90%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H38,0-1[8CBot[27;1H[?12l[?25h[?25l[28;116H7,1  [26;1H[?12l[?25h[?25l[28;116H6[25;1H[?12l[?25h[?25l[28;116H5[24;1H[?12l[?25h[?25l[28;116H4[23;1H[?12l[?25h[?25l[28;116H3[22;1H[?12l[?25h[?25l[28;116H2[21;1H[?12l[?25h[?25l[28;116H1[20;1H[?12l[?25h[?25l[28;116H0[19;1H[?12l[?25h[?25l[28;115H29,0-1[18;1H[?12l[?25h[?25l[28;116H8,1  [17;1H[?12l[?25h[?25l[28;116H7[16;1H[?12l[?25h[?25l[28;116H6,0-1[15;1H[?12l[?25h[?25l[28;116H5,1  [14;1H[?12l[?25h[?25l[28;116H4,0-1[13;1H[?12l[?25h[?25l[28;116H3,1  [12;1H[?12l[?25h[?25l[28;116H2[11;1H[?12l[?25h[?25l[28;116H1[10;1H[?12l[?25h[?25l[28;116H0[9;1H[?12l[?25h[?25l[28;115H19[8;1H[?12l[?25h[?25l[28;116H8,0-1[7;1H[?12l[?25h[?25l[28;116H7,1  [6;1H[?12l[?25h[?25l[28;116H6[5;1H[?12l[?25h[?25l[28;116H5[4;1H[?12l[?25h[?25l[28;116H4,0-1[3;1H[?12l[?25h[?25l[28;116H3,1  [2;1H[?12l[?25h[?25l[28;116H2,0-1[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hrandom_seed = 1[28;115H[K[28;115H11,1[10C90%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hpop_size = 500[28;115H[K[28;115H10,1[10C81%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hmax_generations = 100[28;115H[K[28;115H9,1[11C72%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[28;115H[K[28;115H8,0-1[9C63%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Happ.maxtime = 400[28;115H[K[28;115H7,1[11C54%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Happ.trail = santafe.trl[28;115H[K[28;115H6,1[11C45%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m# app-specific parameters[m[28;115H[K[28;115H5,1[11C36%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[28;115H[K[28;115H4,0-1[9C27%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m###[m[28;115H[K[28;115H3,1[11C18%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m### sample input parameter file for the artificial ant.[m[28;115H[K[28;115H2,1[12C9%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m###[m[28;115H[K[28;115H1,1[11CTop[1;1H[?12l[?25h[?25l[28;115H2[2;1H[?12l[?25h[?25l[28;115H3[3;1H[?12l[?25h[?25l[28;115H4,0-1[4;1H[?12l[?25h[?25l[28;115H5,1  [5;1H[?12l[?25h[?25l[28;115H6[6;1H[?12l[?25h[?25l[28;115H7[7;1H[?12l[?25h[?25l[28;115H8,0-1[8;1H[?12l[?25h[?25l[28;115H9,1  [9;1H[?12l[?25h[?25l[28;115H10,1[10;1H[?12l[?25h[?25l[28;116H1[11;1H[?12l[?25h[?25l[28;116H2,0-1[12;1H[?12l[?25h[?25l[28;116H3,1  [13;1H[?12l[?25h[?25l[28;118H2[13;2H[?12l[?25h[?25l[28;118H3[13;3H[?12l[?25h[?25l[28;118H4[13;4H[?12l[?25h[?25l[28;118H5[13;5H[?12l[?25h[?25l[28;118H6[13;6H[?12l[?25h[?25l[28;118H7[13;7H[?12l[?25h[?25l[28;118H8[13;8H[?12l[?25h[?25l[28;118H9[13;9H[?12l[?25h[?25l[28;118H10[13;10H[?12l[?25h[?25l[28;119H1[13;11H[?12l[?25h[?25l[28;119H2[13;12H[?12l[?25h[?25l[28;119H3[13;13H[?12l[?25h[?25l[28;119H4[13;14H[?12l[?25h[?25l[28;119H5[13;15H[?12l[?25h[?25l[28;119H6[13;16H[?12l[?25h[?25l[28;119H7[13;17H[?12l[?25h[?25l[28;119H8[13;18H[?12l[?25h[?25l[28;119H9[13;19H[?12l[?25h[?25l[28;118H20[13;20H[?12l[?25h[?25l[28;119H1[13;21H[?12l[?25h[?25l[28;119H2[13;22H[?12l[?25h[?25l[28;119H3[13;23H[?12l[?25h[?25l[28;119H4[13;24H[?12l[?25h[?25l[28;119H5[13;25H[?12l[?25h[?25l[28;119H6[13;26H[?12l[?25h[?25l[28;119H7[13;27H[?12l[?25h[?25l[28;119H8[13;28H[?12l[?25h[?25l[28;119H9[13;29H[?12l[?25h[?25l[28;118H30[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25l[13;31H[K[28;119H0[13;30H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;115H[K[28;115H13,30[9CTop[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25la[28;119H2[13;32H[?12l[?25h[28;1H[K[13;31H[?25l[28;115H13,31[9CTop[13;31H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hW[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[28;3H[K[28;3H[?12l[?25h[?25l[28;2H[K[28;2H[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 787C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ rm script2.
script2.a  script2.e  
[dawdf@delmar ant]$ rm script2.[K[K[K[K[K[K[K[Kant
ant.gen            ant_script2.b.gen  ant_script2.b.sys  ant_script2.d.prg  ant_script2.e.gen  ant_script2.e.sys
ant.his            ant_script2.b.his  ant_script2.d.bst  ant_script2.d.stt  ant_script2.e.his  ant.sys
ant.prg            ant_script2.b.prg  ant_script2.d.gen  ant_script2.d.sys  ant_script2.e.prg  
ant_script2.b.bst  ant_script2.b.stt  ant_script2.d.his  ant_script2.e.bst  ant_script2.e.stt  
[dawdf@delmar ant]$ rm ant_script2.*
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  appdef.h    change.o    event.o     function.h   gp.o          memory.o      populate.o   script2.a
ant.his  app.h       ckpoint.o   exch.o      function.o   individ.o     mutate.o      pretty.o     script2.e
ant.prg  app.o       crossovr.o  exit        genspace.o   input.file    [0m[38;5;27moutput_files[0m  random.o     select.o
ant.sys  bstworst.o  ephem.o     fitness.o   GNUmakefile  losaltos.trl  output.o      reproduc.o   tournmnt.o
app.c    cgp_czj.o   eval.o      function.c  [38;5;34mgp[0m           main.o        params.o      santafe.trl  tree.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.a
Script started, file is script2.a
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ ./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 0 1 2 3 4
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0 1 2 3 4

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=0:#Ts=1] = || left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || left
Function "progn2" [#1]:
	F_progn2_0 [#Fs=0:#Ts=1] = || left
	F_progn2_1 [#Fs=0:#Ts=1] = || left
Function "progn3" [#2]:
	F_progn3_0 [#Fs=0:#Ts=1] = || left
	F_progn3_1 [#Fs=0:#Ts=1] = || left
	F_progn3_2 [#Fs=0:#Ts=1] = || left
Root:
	F_Root [#Fs=0:#Ts=1] =  || left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Root:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Root: F [3 members, used] and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    505 trees were generated to fill the population of 500 (500 trees).
    502 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    504 trees were generated to fill the population of 500 (500 trees).
    500 trees were generated to fill the population of 500 (500 trees).
    501 trees were generated to fill the population of 500 (500 trees).
    503 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.67s wall, 0.67s user, 0.00s sys)
    breeding complete.    (2.66s wall, 2.57s user, 0.10s sys)
=== generation 1.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (2.53s wall, 2.50s user, 0.03s sys)
=== generation 2.
    evaluation complete.  (0.63s wall, 0.64s user, 0.00s sys)
    breeding complete.    (2.58s wall, 2.57s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (2.50s wall, 2.50s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (2.37s wall, 2.37s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (2.19s wall, 2.19s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.60s wall, 0.59s user, 0.00s sys)
    breeding complete.    (1.85s wall, 1.86s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.70s wall, 0.70s user, 0.00s sys)
    breeding complete.    (1.81s wall, 1.80s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.69s wall, 1.70s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (1.57s wall, 1.57s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.50s wall, 1.51s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.46s wall, 1.47s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.48s wall, 1.48s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.50s wall, 1.49s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.49s wall, 1.49s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.49s wall, 1.50s user, 0.01s sys)
=== generation 16.
    evaluation complete.  (0.57s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.54s wall, 1.54s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.58s wall, 0.59s user, 0.00s sys)
    breeding complete.    (1.60s wall, 1.60s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.55s wall, 1.55s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.65s wall, 0.65s user, 0.00s sys)
    breeding complete.    (1.62s wall, 1.62s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.57s wall, 1.56s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.58s wall, 1.58s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.58s wall, 1.57s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.61s wall, 1.60s user, 0.00s sys)
=== generation 24.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.62s wall, 1.63s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.65s wall, 1.66s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (1.77s wall, 1.76s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.77s wall, 1.77s user, 0.01s sys)
=== generation 28.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (1.76s wall, 1.76s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.83s wall, 1.82s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (1.80s wall, 1.80s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.96s wall, 1.96s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (1.88s wall, 1.88s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (1.95s wall, 1.95s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (1.91s wall, 1.91s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.89s wall, 1.90s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.57s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.91s wall, 1.91s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.57s wall, 0.56s user, 0.00s sys)
    breeding complete.    (1.94s wall, 1.93s user, 0.00s sys)
=== generation 38.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      1231719253
               freed:      1231719253
           not freed:      0
       max allocated:      588925613
    malloc'ed blocks:      1751036
   realloc'ed blocks:      59
      free'ed blocks:      1751036

------- time -------
             overall:      129.89s wall, 100.20s user, 0.33s sys
          evaluation:      22.59s wall, 22.59s user, 0.00s sys
            breeding:      68.96s wall, 68.83s user, 0.16s sys

------- generation spaces -------
      space   0 size:      5300
      space   1 size:      200
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script exit
Script started, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 787C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.a

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8

[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;116H2,0-1[12;1H[?12l[?25h[?25l[28;116H1,1  [11;1H[?12l[?25h[?25l[28;116H0[10;1H[?12l[?25h[?25l[28;115H9,1 [9;1H[?12l[?25h[?25l[28;115H8,0-1[8;1H[?12l[?25h[?25l[28;115H9,1  [9;1H[?12l[?25h[?25l[28;115H10,1[10;1H[?12l[?25h[?25l[28;116H1[11;1H[?12l[?25h[?25l[28;116H2,0-1[12;1H[?12l[?25h[?25l[28;116H3,1  [13;1H[?12l[?25h[?25l[28;116H4,0-1[14;1H[?12l[?25h[?25l[28;116H5,1  [15;1H[?12l[?25h[?25l[28;116H6[16;1H[?12l[?25h[?25l[28;116H7[17;1H[?12l[?25h[?25l[28;116H8,0-1[18;1H[?12l[?25h[?25l[28;116H9,1  [19;1H[?12l[?25h[?25l[28;115H20[20;1H[?12l[?25h[?25l[28;116H1[21;1H[?12l[?25h[?25l[28;116H2[22;1H[?12l[?25h[?25l[28;116H3[23;1H[?12l[?25h[?25l[28;116H4,0-1[24;1H[?12l[?25h[?25l[28;116H5,1  [25;1H[?12l[?25h[?25l[28;116H6,0-1[26;1H[?12l[?25h[?25l[28;116H7,1  [27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[1].rate = 0.85[28;1H[K[28;115H28,1[11C9%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H29,0-1[8C18%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[2].operator = reproduction, select=(tournament, size=7)[28;115H[K[28;115H30,1[10C27%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[2].rate = 0.05[28;115H[K[28;115H31,1[10C36%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H32,1[10C45%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[3].operator = mutation, select=(tournament, size=7)[28;115H[K[28;115H33,1[10C54%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[3].rate = 0.10[28;115H[K[28;115H34,1[10C63%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H35,1[10C72%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[4].operator = reproduction, select = best[28;115H[K[28;115H36,1[10C81%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[4].rate = 0.0001[28;115H[K[28;115H37,1[10C90%[27;1H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H38,0-1[8CBot[27;1H[?12l[?25h[?25l[28;116H7,1  [26;1H[?12l[?25h[?25l[28;116H6[25;1H[?12l[?25h[?25l[28;116H5[24;1H[?12l[?25h[?25l[28;116H4[23;1H[?12l[?25h[?25l[28;116H3[22;1H[?12l[?25h[?25l[28;116H2[21;1H[?12l[?25h[?25l[28;116H1[20;1H[?12l[?25h[?25l[28;116H0[19;1H[?12l[?25h[?25l[28;115H29,0-1[18;1H[?12l[?25h[?25l[28;116H8,1  [17;1H[?12l[?25h[?25l[28;116H7[16;1H[?12l[?25h[?25l[28;116H6,0-1[15;1H[?12l[?25h[?25l[28;116H5,1  [14;1H[?12l[?25h[?25l[28;116H4,0-1[13;1H[?12l[?25h[?25l[28;116H3,1  [12;1H[?12l[?25h[?25l[28;116H2[11;1H[?12l[?25h[?25l[28;116H1[10;1H[?12l[?25h[?25l[28;116H0[9;1H[?12l[?25h[?25l[28;115H19[8;1H[?12l[?25h[?25l[28;116H8,0-1[7;1H[?12l[?25h[?25l[28;116H7,1  [6;1H[?12l[?25h[?25l[28;116H6[5;1H[?12l[?25h[?25l[28;116H5[4;1H[?12l[?25h[?25l[28;116H4,0-1[3;1H[?12l[?25h[?25l[28;116H3,1  [2;1H[?12l[?25h[?25l[28;116H2,0-1[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hrandom_seed = 1[28;115H[K[28;115H11,1[10C90%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hpop_size = 500[28;115H[K[28;115H10,1[10C81%[1;1H[?12l[?25h[?25l[28;116H1[2;1H[?12l[?25h[?25l[28;116H2,0-1[3;1H[?12l[?25h[?25l[28;116H3,1  [4;1H[?12l[?25h[?25l[28;116H4,0-1[5;1H[?12l[?25h[?25l[28;116H5,1  [6;1H[?12l[?25h[?25l[28;116H6[7;1H[?12l[?25h[?25l[28;116H7[8;1H[?12l[?25h[?25l[28;116H8,0-1[9;1H[?12l[?25h[?25l[28;116H9,1  [10;1H[?12l[?25h[?25l[28;116H8,0-1[9;1H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;115H[K[28;115H18,1[10C81%[9;1H[?12l[?25h[?25lm[28;118H2[9;2H[?12l[?25h[?25la[28;118H3[9;3H[?12l[?25h[?25lx[28;118H4[9;4H[?12l[?25h[?25l_[28;118H5[9;5H[?12l[?25h[?25ln[28;118H6[9;6H[?12l[?25h[?25lo[28;118H7[9;7H[?12l[?25h[?25ld[28;118H8[9;8H[?12l[?25h[?25le[28;118H9[9;9H[?12l[?25h[?25ls[28;118H10[9;10H[?12l[?25h[?25l[28;119H1[9;11H[?12l[?25h[?25l=[28;119H2[9;12H[?12l[?25h[?25l[28;119H3[9;13H[?12l[?25h[?25l5[28;119H4[9;14H[?12l[?25h[?25l0[28;119H5[9;15H[?12l[?25h[?25l0[28;119H6[9;16H[?12l[?25h[?25l[28;116H9[10;16H[?12l[?25h[?25l[28;115H20,15[11;15H[?12l[?25h[?25l[28;116H1,16[12;16H[?12l[?25h[?25l[28;116H2[13;16H[?12l[?25h[?25l[28;116H3[14;16H[?12l[?25h[?25l[28;116H4,1 [15;1H[?12l[?25h[?25l[28;116H5,16[16;16H[?12l[?25h[?25l[28;116H6,1 [17;1H[?12l[?25h[?25l[28;116H7,16[18;16H[?12l[?25h[?25l[28;116H8[19;16H[?12l[?25h[?25l[28;116H9,1 [20;1H[?12l[?25h[?25l[28;115H30,16[21;16H[?12l[?25h[?25l[28;116H1[22;16H[?12l[?25h[?25l[28;116H2,9 [23;9H[?12l[?25h[?25l[28;116H3,16[24;16H[?12l[?25h[?25l[28;116H4[25;16H[?12l[?25h[?25l[28;116H5,7 [26;7H[?12l[?25h[?25l[28;116H6,16[27;16H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[27;1Hbreed[4].rate = 0.0001[28;115H[K[28;115H37,16[9C90%[27;16H[?12l[?25h[?25l[1;27r[27;1H
[1;28r[28;115H[K[28;115H38,1[10CBot[27;1H[?12l[?25h[28;1H[K[27;1H[?25l[28;115H38,0-1[8CBot[27;1H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hW[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[97m[41mE492: Not an editor command: Wq[m[83C38,0-1[8CBot[27;1H[?12l[?25h[?25l[28;1H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 802C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.a
Script started, file is script2.a
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ pwd[1Plsdtar -cvf question2.tar 2.*[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd output_files/[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 0 1 2 3 4
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0 1 2 3 4

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=0:#Ts=1] = || left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || left
Function "progn2" [#1]:
	F_progn2_0 [#Fs=0:#Ts=1] = || left
	F_progn2_1 [#Fs=0:#Ts=1] = || left
Function "progn3" [#2]:
	F_progn3_0 [#Fs=0:#Ts=1] = || left
	F_progn3_1 [#Fs=0:#Ts=1] = || left
	F_progn3_2 [#Fs=0:#Ts=1] = || left
Root:
	F_Root [#Fs=0:#Ts=1] =  || left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Root:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Root: F [3 members, used] and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    691 trees were generated to fill the population of 500 (500 trees).
    680 trees were generated to fill the population of 500 (500 trees).
    658 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    706 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    694 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    682 trees were generated to fill the population of 500 (500 trees).
    705 trees were generated to fill the population of 500 (500 trees).
    668 trees were generated to fill the population of 500 (500 trees).
    665 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    700 trees were generated to fill the population of 500 (500 trees).
    672 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    688 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    716 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    663 trees were generated to fill the population of 500 (500 trees).
    678 trees were generated to fill the population of 500 (500 trees).
    682 trees were generated to fill the population of 500 (500 trees).
    690 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    681 trees were generated to fill the population of 500 (500 trees).
    673 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.92s wall, 0.87s user, 0.05s sys)
=== generation 1.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.04s wall, 1.03s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.54s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.96s wall, 0.96s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.54s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.95s wall, 0.95s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.91s wall, 0.91s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.53s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.90s wall, 0.90s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.53s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.85s wall, 0.85s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.54s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.85s wall, 0.84s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.83s wall, 0.84s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.82s wall, 0.81s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.80s wall, 0.80s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.79s wall, 0.79s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.81s wall, 0.81s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.88s wall, 0.87s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.85s wall, 0.86s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.85s wall, 0.85s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.84s wall, 0.84s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.86s wall, 0.86s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.86s wall, 0.86s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.90s wall, 0.89s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.91s wall, 0.91s user, 0.01s sys)
=== generation 21.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.91s wall, 0.91s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.94s wall, 0.94s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.96s wall, 0.96s user, 0.01s sys)
=== generation 24.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.01s wall, 1.01s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.03s wall, 1.03s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.01s wall, 1.00s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.01s wall, 1.01s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.02s wall, 1.02s user, 0.01s sys)
=== generation 29.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.04s wall, 1.04s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.02s wall, 1.03s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.01s wall, 1.01s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.12s wall, 1.11s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.10s wall, 1.10s user, 0.01s sys)
=== generation 34.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.14s wall, 1.13s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.15s wall, 1.15s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.09s wall, 1.09s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      66615163
               freed:      66615163
           not freed:      0
       max allocated:      223198187
    malloc'ed blocks:      1702930
   realloc'ed blocks:      47
      free'ed blocks:      1702930

------- time -------
             overall:      83.14s wall, 59.76s user, 0.22s sys
          evaluation:      19.79s wall, 19.74s user, 0.00s sys
            breeding:      34.94s wall, 34.84s user, 0.11s sys

------- generation spaces -------
      space   0 size:      4100
      space   1 size:      200
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exitsexitcexitrexitiexitpexittexit exit
Script started, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 802C[>c[2;1Houtput.basename = ant_script2.a

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)
breed[1].rate = 0.85

breed[2].operator = reproduction, select=(tournament, size=7)
breed[2].rate = 0.05

breed[3].operator = mutation, select=(tournament, size=7)
breed[3].rate = 0.10

breed[4].operator = reproduction, select = best
breed[4].rate = 0.0001[28;115H38,0-1[8CBot[27;1H[?12l[?25h[?25l[28;116H7,1  [26;1H[?12l[?25h[?25l[28;116H6[25;1H[?12l[?25h[?25l[28;116H7[26;1H[?12l[?25h[?25l

[1m-- INSERT --[m[28;14H[K[28;115H37,1[10CBot[26;1H[?12l[?25h[?25l[28;118H2[26;2H[?12l[?25h[?25l[28;118H3[26;3H[?12l[?25h[?25l[28;118H4[26;4H[?12l[?25h[?25l[28;118H5[26;5H[?12l[?25h[?25ld[106m[[m4[106m][m[28;118H6[26;6H[?12l[?25h[?25l[28;115H[K[28;115H37,7[10CBot[26;7H[?12l[?25h[?25l[28;118H8[26;8H[?12l[?25h[?25l[28;115H[K[28;115H37,9[10CBot[26;9H[?12l[?25h[?25l[4][28;118H10[26;10H[?12l[?25h[?25l[28;119H1[26;11H[?12l[?25h[?25l[28;119H2[26;12H[?12l[?25h[?25l[28;119H3[26;13H[?12l[?25h[?25l[28;119H4[26;14H[?12l[?25h[?25l[28;119H5[26;15H[?12l[?25h[?25l[28;119H6[26;16H[?12l[?25h[?25l[28;119H7[26;17H[?12l[?25h[?25l[28;119H8[26;18H[?12l[?25h[?25l[28;119H9[26;19H[?12l[?25h[?25l[28;118H20[26;20H[?12l[?25h[?25l[28;119H1[26;21H[?12l[?25h[?25l001[28;119H2[26;22H[?12l[?25h[?25l[28;116H6[25;22H[?12l[?25h[?25l[28;116H5,7 [24;7H[?12l[?25h[?25l[28;116H4,21[23;21H[?12l[?25h[?25l[28;116H3,22[22;22H[?12l[?25h[?25l[28;116H2,9 [21;9H[?12l[?25h[?25l[28;116H1,21[20;21H[?12l[?25h[?25l[28;116H0,22[19;22H[?12l[?25h[?25l[28;115H29,1 [18;1H[?12l[?25h[?25l[28;116H8,21[17;21H[?12l[?25h[?25l[28;116H7,22[16;22H[?12l[?25h[?25l[28;116H6,1 [15;1H[?12l[?25h[?25l[28;116H5,17[14;17H[?12l[?25h[?25l[28;116H4,1 [13;1H[?12l[?25h[?25l[28;116H3,22[12;22H[?12l[?25h[?25l[28;116H2[11;22H[?12l[?25h[?25l[28;116H1[10;22H[?12l[?25h[?25l[28;116H0,15[9;15H[?12l[?25h[?25l[28;115H19,22[8;22H[?12l[?25h[?25l[28;116H8,16[7;16H[?12l[?25h[?25l[28;116H7,17[6;17H[?12l[?25h[?25l[28;116H6,22[5;22H[?12l[?25h[?25l[28;116H5[4;22H[?12l[?25h[?25l[28;116H4,1 [3;1H[?12l[?25h[?25l[28;116H3,22[2;22H[?12l[?25h[?25l[28;116H2,1 [1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hrandom_seed = 1[28;115H[K[28;115H11,16[9C90%[1;16H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hpop_size = 500[28;115H[K[28;115H10,15[9C81%[1;15H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Hmax_generations = 100[28;115H[K[28;115H9,22[10C72%[1;22H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[28;115H[K[28;115H8,1[11C63%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Happ.maxtime = 400[28;115H[K[28;115H7,18[10C54%[1;18H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1Happ.trail = santafe.trl[28;115H[K[28;115H6,22[10C45%[1;22H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m# app-specific parameters[m[28;115H[K[28;115H5,22[10C36%[1;22H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[28;115H[K[28;115H4,1[11C27%[1;1H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m###[m[28;115H[K[28;115H3,4[11C18%[1;4H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m### sample input parameter file for the artificial ant.[m[28;115H[K[28;115H2,22[11C9%[1;22H[?12l[?25h[?25l[1;27r[1;1H[L[1;28r[1;1H[34m###[m[28;115H[K[28;115H1,4[11CTop[1;4H[?12l[?25h[28;1H[K[1;3H[?25l[28;115H1,3[11CTop[1;3H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 803C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ vi input.file pwd[K[1Plsdtar -cvf question2.tar 2.*[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd output_files/[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 01  1 2 3 4
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0 1 2 3 4

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=0:#Ts=1] = || left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || left
Function "progn2" [#1]:
	F_progn2_0 [#Fs=0:#Ts=1] = || left
	F_progn2_1 [#Fs=0:#Ts=1] = || left
Function "progn3" [#2]:
	F_progn3_0 [#Fs=0:#Ts=1] = || left
	F_progn3_1 [#Fs=0:#Ts=1] = || left
	F_progn3_2 [#Fs=0:#Ts=1] = || left
Root:
	F_Root [#Fs=0:#Ts=1] =  || left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right

Root:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = move right




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Root: F [3 members, used] and T [2 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 -1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    691 trees were generated to fill the population of 500 (500 trees).
    680 trees were generated to fill the population of 500 (500 trees).
    658 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    706 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    694 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    682 trees were generated to fill the population of 500 (500 trees).
    705 trees were generated to fill the population of 500 (500 trees).
    668 trees were generated to fill the population of 500 (500 trees).
    665 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    700 trees were generated to fill the population of 500 (500 trees).
    672 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    688 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    716 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    663 trees were generated to fill the population of 500 (500 trees).
    678 trees were generated to fill the population of 500 (500 trees).
    682 trees were generated to fill the population of 500 (500 trees).
    690 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    681 trees were generated to fill the population of 500 (500 trees).
    673 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.84s wall, 0.79s user, 0.04s sys)
=== generation 1.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.92s wall, 0.91s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.63s wall, 0.62s user, 0.00s sys)
    breeding complete.    (1.05s wall, 1.04s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.54s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.93s wall, 0.93s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.88s wall, 0.88s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.87s wall, 0.86s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.54s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.84s wall, 0.84s user, 0.01s sys)
=== generation 7.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.86s wall, 0.86s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.88s wall, 0.88s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.89s wall, 0.89s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.94s wall, 0.94s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.95s wall, 0.95s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.91s wall, 0.90s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.88s wall, 0.88s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.86s wall, 0.86s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.87s wall, 0.86s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.93s wall, 0.93s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.95s wall, 0.95s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.91s wall, 0.91s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.92s wall, 0.91s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.52s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.93s wall, 0.93s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.94s wall, 0.94s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.97s wall, 0.97s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.53s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.98s wall, 0.98s user, 0.00s sys)
=== generation 24.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.01s wall, 1.01s user, 0.01s sys)
=== generation 25.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.99s wall, 0.99s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.07s wall, 1.07s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (1.09s wall, 1.09s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.08s wall, 1.08s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.06s wall, 1.06s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.04s wall, 1.04s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.12s wall, 1.12s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.55s wall, 0.54s user, 0.00s sys)
    breeding complete.    (1.07s wall, 1.06s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.06s wall, 1.06s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.07s wall, 1.06s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.08s wall, 1.08s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.11s wall, 1.11s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.09s wall, 1.09s user, 0.01s sys)
=== generation 38.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.09s wall, 1.09s user, 0.00s sys)
=== generation 39.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.11s wall, 1.11s user, 0.00s sys)
=== generation 40.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.11s wall, 1.11s user, 0.00s sys)
=== generation 41.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.13s wall, 1.14s user, 0.00s sys)
=== generation 42.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.15s wall, 1.14s user, 0.00s sys)
=== generation 43.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.16s wall, 1.15s user, 0.01s sys)
=== generation 44.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.16s wall, 1.15s user, 0.00s sys)
=== generation 45.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.17s wall, 1.16s user, 0.00s sys)
=== generation 46.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.18s wall, 1.18s user, 0.00s sys)
=== generation 47.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.25s wall, 1.24s user, 0.00s sys)
=== generation 48.
    evaluation complete.  (0.52s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.19s wall, 1.19s user, 0.00s sys)
=== generation 49.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.19s wall, 1.19s user, 0.01s sys)
=== generation 50.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.21s wall, 1.21s user, 0.00s sys)
=== generation 51.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.22s wall, 1.21s user, 0.00s sys)
=== generation 52.
    evaluation complete.  (0.52s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.27s wall, 1.27s user, 0.00s sys)
=== generation 53.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.28s wall, 1.28s user, 0.00s sys)
=== generation 54.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (1.27s wall, 1.27s user, 0.00s sys)
=== generation 55.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (1.22s wall, 1.22s user, 0.00s sys)
=== generation 56.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.25s wall, 1.26s user, 0.00s sys)
=== generation 57.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.22s wall, 1.22s user, 0.00s sys)
=== generation 58.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.24s wall, 1.23s user, 0.00s sys)
=== generation 59.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.22s wall, 1.23s user, 0.00s sys)
=== generation 60.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.24s wall, 1.23s user, 0.00s sys)
=== generation 61.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.23s wall, 1.23s user, 0.01s sys)
=== generation 62.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.25s wall, 1.24s user, 0.00s sys)
=== generation 63.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.26s wall, 1.26s user, 0.00s sys)
=== generation 64.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.26s wall, 1.25s user, 0.00s sys)
=== generation 65.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.25s wall, 1.26s user, 0.00s sys)
=== generation 66.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.26s wall, 1.26s user, 0.00s sys)
=== generation 67.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.26s wall, 1.26s user, 0.00s sys)
=== generation 68.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.29s wall, 1.28s user, 0.01s sys)
=== generation 69.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.30s wall, 1.31s user, 0.00s sys)
=== generation 70.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.35s wall, 1.34s user, 0.00s sys)
=== generation 71.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.30s wall, 1.30s user, 0.00s sys)
=== generation 72.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.34s wall, 1.33s user, 0.01s sys)
=== generation 73.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.29s wall, 1.29s user, 0.00s sys)
=== generation 74.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.27s wall, 1.27s user, 0.00s sys)
=== generation 75.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.28s wall, 1.28s user, 0.00s sys)
=== generation 76.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.32s wall, 1.32s user, 0.00s sys)
=== generation 77.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.31s wall, 1.30s user, 0.00s sys)
=== generation 78.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.31s wall, 1.31s user, 0.00s sys)
=== generation 79.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.36s wall, 1.36s user, 0.00s sys)
=== generation 80.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.31s wall, 1.31s user, 0.00s sys)
=== generation 81.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.32s wall, 1.32s user, 0.00s sys)
=== generation 82.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.32s wall, 1.32s user, 0.00s sys)
=== generation 83.
    evaluation complete.  (0.54s wall, 0.55s user, 0.00s sys)
    breeding complete.    (1.40s wall, 1.40s user, 0.00s sys)
=== generation 84.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (1.31s wall, 1.32s user, 0.00s sys)
=== generation 85.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.34s wall, 1.35s user, 0.00s sys)
=== generation 86.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (1.34s wall, 1.34s user, 0.00s sys)
=== generation 87.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.40s wall, 1.40s user, 0.00s sys)
=== generation 88.
    evaluation complete.  (0.54s wall, 0.54s user, 0.01s sys)
    breeding complete.    (1.38s wall, 1.37s user, 0.00s sys)
=== generation 89.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.33s wall, 1.33s user, 0.00s sys)
=== generation 90.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.34s wall, 1.33s user, 0.00s sys)
=== generation 91.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.34s wall, 1.34s user, 0.00s sys)
=== generation 92.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.35s wall, 1.35s user, 0.00s sys)
=== generation 93.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.37s wall, 1.37s user, 0.00s sys)
=== generation 94.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.40s wall, 1.40s user, 0.00s sys)
=== generation 95.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.36s wall, 1.35s user, 0.00s sys)
=== generation 96.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (1.37s wall, 1.37s user, 0.00s sys)
=== generation 97.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.38s wall, 1.37s user, 0.00s sys)
=== generation 98.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.38s wall, 1.38s user, 0.00s sys)
=== generation 99.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (1.38s wall, 1.39s user, 0.00s sys)
=== generation 100.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)

SYSTEM STATISTICS

------- memory -------
           allocated:      640099852
               freed:      640099852
           not freed:      0
       max allocated:      292316468
    malloc'ed blocks:      4470276
   realloc'ed blocks:      47
      free'ed blocks:      4470276

------- time -------
             overall:      214.11s wall, 180.97s user, 0.28s sys
          evaluation:      52.06s wall, 52.11s user, 0.01s sys
            breeding:      115.98s wall, 115.75s user, 0.14s sys

------- generation spaces -------
      space   0 size:      4100
      space   1 size:      200
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script exit
Script started, file is exit
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
[?1034h[dawdf@delmar ant]$ script exit 
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
^Cbash: fork: retry: No child processes
^Z
bash: fork: Resource temporarily unavailable
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.a.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     select.o
ant.his            ant_script2.a.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tournmnt.o
ant.prg            ant_script2.a.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o   tree.o
ant_script2.a.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.a.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.a
ant_script2.a.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion2.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ cd 2,[K.a/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.a[dawdf@delmar 2.a]$ ls
ant.bst            ant_script2.a.gen  ant_script2.a.prg  ant_script2.a.sys  script2.a
ant_script2.a.bst  ant_script2.a.his  ant_script2.a.stt  ant.stt
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.a[dawdf@delmar 2.a]$ rm -rf *
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.a[dawdf@delmar 2.a]$ ls
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.a[dawdf@delmar 2.a]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion2.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.a.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     select.o
ant.his            ant_script2.a.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tournmnt.o
ant.prg            ant_script2.a.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o   tree.o
ant_script2.a.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.a.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.a
ant_script2.a.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv ant_script2.a.
ant_script2.a.bst  ant_script2.a.gen  ant_script2.a.his  ant_script2.a.prg  ant_script2.a.stt  ant_script2.a.sys
[dawdf@delmar ant]$ mv ant_script2.a.
ant_script2.a.bst  ant_script2.a.gen  ant_script2.a.his  ant_script2.a.prg  ant_script2.a.stt  ant_script2.a.sys
[dawdf@delmar ant]$ mv ant_script2.a.* ./output_files/2.1[Ka/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.a ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.a ./output_files/2.a/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     script2.e
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     select.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tournmnt.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl  tree.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script [K[K[K[K[K[K[Kvi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 803C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.a

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H1,1[11CTop[1;1H[?12l[?25h[?25l[28;115H2[2;1H[?12l[?25h[?25l[28;115H3[3;1H[?12l[?25h[?25l[28;115H4,0-1[4;1H[?12l[?25h[?25l[28;115H5,1  [5;1H[?12l[?25h[?25l[28;115H6[6;1H[?12l[?25h[?25l[28;115H7[7;1H[?12l[?25h[?25l[28;115H8,0-1[8;1H[?12l[?25h[?25l[28;115H9,1  [9;1H[?12l[?25h[?25l[28;115H10,1[10;1H[?12l[?25h[?25l[28;116H1[11;1H[?12l[?25h[?25l[28;116H2,0-1[12;1H[?12l[?25h[?25l[28;116H3,1  [13;1H[?12l[?25h[?25l[28;116H4,0-1[14;1H[?12l[?25h[?25l[28;116H3,1  [13;1H[?12l[?25h[?25l[28;118H2[13;2H[?12l[?25h[?25l[28;118H3[13;3H[?12l[?25h[?25l[28;118H4[13;4H[?12l[?25h[?25l[28;118H5[13;5H[?12l[?25h[?25l[28;118H6[13;6H[?12l[?25h[?25l[28;118H7[13;7H[?12l[?25h[?25l[28;118H8[13;8H[?12l[?25h[?25l[28;118H9[13;9H[?12l[?25h[?25l[28;118H10[13;10H[?12l[?25h[?25l[28;119H1[13;11H[?12l[?25h[?25l[28;119H2[13;12H[?12l[?25h[?25l[28;119H3[13;13H[?12l[?25h[?25l[28;119H4[13;14H[?12l[?25h[?25l[28;119H5[13;15H[?12l[?25h[?25l[28;119H6[13;16H[?12l[?25h[?25l[28;119H7[13;17H[?12l[?25h[?25l[28;119H8[13;18H[?12l[?25h[?25l[28;119H9[13;19H[?12l[?25h[?25l[28;118H20[13;20H[?12l[?25h[?25l[28;119H1[13;21H[?12l[?25h[?25l[28;119H2[13;22H[?12l[?25h[?25l[28;119H3[13;23H[?12l[?25h[?25l[28;119H4[13;24H[?12l[?25h[?25l[28;119H5[13;25H[?12l[?25h[?25l[28;119H6[13;26H[?12l[?25h[?25l[28;119H7[13;27H[?12l[?25h[?25l[28;119H8[13;28H[?12l[?25h[?25l[28;119H9[13;29H[?12l[?25h[?25l[28;118H30[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25l[13;31H[K[28;119H0[13;30H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;14H[K[28;115H13,30[9CTop[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25lb[28;119H2[13;32H[?12l[?25h[28;1H[K[13;31H[?25l[28;115H13,31[9CTop[13;31H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 803C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.e [K[Kb
Script started, file is script2.b
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
[?1034h[dawdf@delmar ant]$ exitscript exit [8Pexit[K[K[K[K./go[Kp -f input.file 
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
[?1034h[dawdf@delmar ant]$ ./gp -f input.file [K[K[K[K[K[K[K[K[K[K[Kinput.file 
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
[?1034h[dawdf@delmar ant]$ exit
exit
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: retry: No child processes
bash: fork: Resource temporarily unavailable
[?1034h[dawdf@delmar ant]$ exit()
> 
> ^C
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ ^C
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ^C
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is script2.b
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is exit
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.b 
Script started, file is script2.b
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exitscript script2.b[2Pvi input.file ls[Kmv script2.a ./output_files/2.a/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6@ant_script2.a.*[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd ..[K[K[K[K[Kg[K./gp -a input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
ERROR: unrecognized command line option: "-a".
ERROR: unrecognized command line option: "input.file".
FATAL ERROR: command line errors occurred.  dying.
exiting due to fatal error.
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ./gp -a input.file [C[1P[1@f

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 0 1 2   3 4 5
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 13  3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2   3 4 5
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 3 4 5
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 3 4 5
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0 1 2 3 4 5

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=1:#Ts=0] = progn3 ||
	F_if-food-ahead_1 [#Fs=1:#Ts=0] = progn3 ||
Function "progn2" [#1]:
	F_progn2_0 [#Fs=1:#Ts=0] = progn3 ||
	F_progn2_1 [#Fs=1:#Ts=0] = progn3 ||
Function "progn3" [#2]:
	F_progn3_0 [#Fs=1:#Ts=0] = progn3 ||
	F_progn3_1 [#Fs=1:#Ts=0] = progn3 ||
	F_progn3_2 [#Fs=1:#Ts=0] = progn3 ||
Root:
	F_Root [#Fs=1:#Ts=0] =  progn3 ||


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left
	Argument 1:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left
	Argument 1:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left
	Argument 1:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left
	Argument 2:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left

Root:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Root: F [2 members, used] and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    600 trees were generated to fill the population of 500 (500 trees).
    578 trees were generated to fill the population of 500 (500 trees).
    562 trees were generated to fill the population of 500 (500 trees).
    584 trees were generated to fill the population of 500 (500 trees).
    607 trees were generated to fill the population of 500 (500 trees).
    600 trees were generated to fill the population of 500 (500 trees).
    587 trees were generated to fill the population of 500 (500 trees).
    592 trees were generated to fill the population of 500 (500 trees).
    589 trees were generated to fill the population of 500 (500 trees).
    580 trees were generated to fill the population of 500 (500 trees).
    599 trees were generated to fill the population of 500 (500 trees).
    589 trees were generated to fill the population of 500 (500 trees).
    593 trees were generated to fill the population of 500 (500 trees).
    583 trees were generated to fill the population of 500 (500 trees).
    585 trees were generated to fill the population of 500 (500 trees).
    610 trees were generated to fill the population of 500 (500 trees).
    586 trees were generated to fill the population of 500 (500 trees).
    600 trees were generated to fill the population of 500 (500 trees).
    589 trees were generated to fill the population of 500 (500 trees).
    588 trees were generated to fill the population of 500 (500 trees).
    573 trees were generated to fill the population of 500 (500 trees).
    588 trees were generated to fill the population of 500 (500 trees).
    587 trees were generated to fill the population of 500 (500 trees).
    597 trees were generated to fill the population of 500 (500 trees).
    572 trees were generated to fill the population of 500 (500 trees).
    595 trees were generated to fill the population of 500 (500 trees).
    592 trees were generated to fill the population of 500 (500 trees).
    589 trees were generated to fill the population of 500 (500 trees).
    583 trees were generated to fill the population of 500 (500 trees).
    599 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.75s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.57s wall, 0.54s user, 0.02s sys)
=== generation 1.
    evaluation complete.  (0.74s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.58s wall, 0.57s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.74s wall, 0.75s user, 0.01s sys)
    breeding complete.    (0.57s wall, 0.56s user, 0.00s sys)
=== generation 3.
    evaluation complete.  (0.74s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.58s wall, 0.57s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.74s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.56s wall, 0.56s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.74s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.53s wall, 0.53s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.75s wall, 0.75s user, 0.00s sys)
    breeding complete.    (0.53s wall, 0.53s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.80s wall, 0.80s user, 0.00s sys)
    breeding complete.    (0.57s wall, 0.56s user, 0.01s sys)
=== generation 8.
    evaluation complete.  (0.78s wall, 0.79s user, 0.00s sys)
    breeding complete.    (0.53s wall, 0.53s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.75s wall, 0.75s user, 0.00s sys)
    breeding complete.    (0.51s wall, 0.51s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.74s wall, 0.75s user, 0.00s sys)
    breeding complete.    (0.55s wall, 0.54s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.78s wall, 0.78s user, 0.00s sys)
    breeding complete.    (0.56s wall, 0.56s user, 0.01s sys)
=== generation 12.
    evaluation complete.  (0.78s wall, 0.77s user, 0.00s sys)
    breeding complete.    (0.56s wall, 0.55s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.78s wall, 0.79s user, 0.00s sys)
    breeding complete.    (0.57s wall, 0.58s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.76s wall, 0.76s user, 0.00s sys)
    breeding complete.    (0.63s wall, 0.62s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.80s wall, 0.80s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      -539447684
               freed:      -539447684
           not freed:      0
       max allocated:      137754588
    malloc'ed blocks:      716783
   realloc'ed blocks:      14
      free'ed blocks:      716783

------- time -------
             overall:      129.05s wall, 22.12s user, 0.12s sys
          evaluation:      12.17s wall, 12.19s user, 0.01s sys
            breeding:      8.40s wall, 8.31s user, 0.05s sys

------- generation spaces -------
      space   0 size:      900
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is script2.b
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.b.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     select.o
ant.his            ant_script2.b.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tournmnt.o
ant.prg            ant_script2.b.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o   tree.o
ant_script2.b.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.b.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.b
ant_script2.b.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.
script2.b  script2.e  
[dawdf@delmar ant]$ mv script2.b ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.b ./output_files/2.b/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv ant_script2.b.
ant_script2.b.bst  ant_script2.b.gen  ant_script2.b.his  ant_script2.b.prg  ant_script2.b.stt  ant_script2.b.sys
[dawdf@delmar ant]$ mv ant_script2.b.* ./output_files/2.b/
ant_script2.b.bst  ant_script2.b.his  ant_script2.b.stt  script2.b          
ant_script2.b.gen  ant_script2.b.prg  ant_script2.b.sys  
[dawdf@delmar ant]$ mv ant_script2.b.* ./output_files/2.b/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     script2.e
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     select.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tournmnt.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl  tree.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.e [K[Kc
Script started, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4 5 

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 3
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4 5 

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 3
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4 5 
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=0:#Ts=0] = ||
Function "progn2" [#1]:
	F_progn2_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn2_1 [#Fs=0:#Ts=0] = ||
Function "progn3" [#2]:
	F_progn3_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn3_1 [#Fs=0:#Ts=0] = ||
	F_progn3_2 [#Fs=0:#Ts=0] = ||
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000
	Argument 2: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    659 trees were generated to fill the population of 500 (500 trees).
    654 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    615 trees were generated to fill the population of 500 (500 trees).
    643 trees were generated to fill the population of 500 (500 trees).
    627 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    636 trees were generated to fill the population of 500 (500 trees).
    640 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    636 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    647 trees were generated to fill the population of 500 (500 trees).
    625 trees were generated to fill the population of 500 (500 trees).
    629 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    646 trees were generated to fill the population of 500 (500 trees).
    637 trees were generated to fill the population of 500 (500 trees).
    624 trees were generated to fill the population of 500 (500 trees).
    639 trees were generated to fill the population of 500 (500 trees).
    618 trees were generated to fill the population of 500 (500 trees).
    604 trees were generated to fill the population of 500 (500 trees).
    632 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    642 trees were generated to fill the population of 500 (500 trees).
    626 trees were generated to fill the population of 500 (500 trees).
    652 trees were generated to fill the population of 500 (500 trees).
    640 trees were generated to fill the population of 500 (500 trees).
    625 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.20s user, 0.00s sys)
=== generation 1.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.20s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.21s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.01s sys)
=== generation 4.
    evaluation complete.  (0.57s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.25s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.27s wall, 0.26s user, 0.01s sys)
=== generation 7.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.55s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.29s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.52s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.01s sys)
=== generation 11.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.30s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.32s wall, 0.31s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.29s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.29s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.29s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.30s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.31s wall, 0.30s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.32s wall, 0.31s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.54s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.32s wall, 0.33s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
^C
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.b.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     select.o
ant.his            ant_script2.b.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tournmnt.o
ant.prg            ant_script2.b.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o   tree.o
ant_script2.b.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.b.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.c
ant_script2.b.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 803C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.b

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;118H2[13;2H[?12l[?25h[?25l[28;118H3[13;3H[?12l[?25h[?25l[28;118H4[13;4H[?12l[?25h[?25l[28;118H5[13;5H[?12l[?25h[?25l[28;118H6[13;6H[?12l[?25h[?25l[28;118H7[13;7H[?12l[?25h[?25l[28;118H8[13;8H[?12l[?25h[?25l[28;118H9[13;9H[?12l[?25h[?25l[28;118H10[13;10H[?12l[?25h[?25l[28;119H1[13;11H[?12l[?25h[?25l[28;119H2[13;12H[?12l[?25h[?25l[28;119H3[13;13H[?12l[?25h[?25l[28;119H4[13;14H[?12l[?25h[?25l[28;119H5[13;15H[?12l[?25h[?25l[28;119H6[13;16H[?12l[?25h[?25l[28;119H7[13;17H[?12l[?25h[?25l[28;119H8[13;18H[?12l[?25h[?25l[28;119H9[13;19H[?12l[?25h[?25l[28;118H20[13;20H[?12l[?25h[?25l[28;119H1[13;21H[?12l[?25h[?25l[28;119H2[13;22H[?12l[?25h[?25l[28;119H3[13;23H[?12l[?25h[?25l[28;119H4[13;24H[?12l[?25h[?25l[28;119H5[13;25H[?12l[?25h[?25l[28;119H6[13;26H[?12l[?25h[?25l[28;119H7[13;27H[?12l[?25h[?25l[28;119H8[13;28H[?12l[?25h[?25l[28;119H9[13;29H[?12l[?25h[?25l[28;118H30[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25l[13;31H[K[28;119H0[13;30H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;14H[K[28;115H13,30[9CTop[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25lc[28;119H2[13;32H[?12l[?25h[28;1H[K[13;31H[?25l[28;115H13,31[9CTop[13;31H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 803C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.c
Script started, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 3 
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 3
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4 5 
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4 5 

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=0:#Ts=0] = ||
Function "progn2" [#1]:
	F_progn2_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn2_1 [#Fs=0:#Ts=0] = ||
Function "progn3" [#2]:
	F_progn3_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn3_1 [#Fs=0:#Ts=0] = ||
	F_progn3_2 [#Fs=0:#Ts=0] = ||
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000
	Argument 2: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    659 trees were generated to fill the population of 500 (500 trees).
    654 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    615 trees were generated to fill the population of 500 (500 trees).
    643 trees were generated to fill the population of 500 (500 trees).
    627 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    636 trees were generated to fill the population of 500 (500 trees).
    640 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    636 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    647 trees were generated to fill the population of 500 (500 trees).
    625 trees were generated to fill the population of 500 (500 trees).
    629 trees were generated to fill the population of 500 (500 trees).
    648 trees were generated to fill the population of 500 (500 trees).
    646 trees were generated to fill the population of 500 (500 trees).
    637 trees were generated to fill the population of 500 (500 trees).
    624 trees were generated to fill the population of 500 (500 trees).
    639 trees were generated to fill the population of 500 (500 trees).
    618 trees were generated to fill the population of 500 (500 trees).
    604 trees were generated to fill the population of 500 (500 trees).
    632 trees were generated to fill the population of 500 (500 trees).
    649 trees were generated to fill the population of 500 (500 trees).
    642 trees were generated to fill the population of 500 (500 trees).
    626 trees were generated to fill the population of 500 (500 trees).
    652 trees were generated to fill the population of 500 (500 trees).
    640 trees were generated to fill the population of 500 (500 trees).
    625 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.17s wall, 0.16s user, 0.01s sys)
=== generation 1.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.62s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.20s user, 0.00s sys)
=== generation 3.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.01s sys)
=== generation 5.
    evaluation complete.  (0.54s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.32s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.01s sys)
=== generation 8.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.27s wall, 0.27s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.28s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.31s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.53s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.29s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.31s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.30s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.29s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.52s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.29s wall, 0.29s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.31s wall, 0.31s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.53s wall, 0.54s user, 0.01s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.53s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.31s wall, 0.31s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.32s wall, 0.32s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.32s wall, 0.31s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.34s user, 0.00s sys)
=== generation 24.
    evaluation complete.  (0.51s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.35s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.38s wall, 0.38s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.37s wall, 0.37s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.41s wall, 0.41s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.34s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 38.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 39.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 40.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 41.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 42.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 43.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 44.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 45.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 46.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 47.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.33s user, 0.00s sys)
=== generation 48.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 49.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 50.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 51.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.01s sys)
=== generation 52.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 53.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 54.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.33s wall, 0.34s user, 0.00s sys)
=== generation 55.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 56.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.37s wall, 0.38s user, 0.00s sys)
=== generation 57.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 58.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 59.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.39s wall, 0.39s user, 0.00s sys)
=== generation 60.
    evaluation complete.  (0.49s wall, 0.48s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 61.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 62.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 63.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 64.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 65.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 66.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 67.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 68.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 69.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.35s user, 0.00s sys)
=== generation 70.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 71.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.36s user, 0.00s sys)
=== generation 72.
    evaluation complete.  (0.50s wall, 0.50s user, 0.01s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 73.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.35s user, 0.00s sys)
=== generation 74.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.35s user, 0.00s sys)
=== generation 75.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.36s user, 0.00s sys)
=== generation 76.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.35s user, 0.00s sys)
=== generation 77.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.34s user, 0.00s sys)
=== generation 78.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 79.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 80.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 81.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 82.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 83.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 84.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 85.
    evaluation complete.  (0.50s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.34s user, 0.00s sys)
=== generation 86.
    evaluation complete.  (0.52s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.35s user, 0.00s sys)
=== generation 87.
    evaluation complete.  (0.51s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.36s user, 0.00s sys)
=== generation 88.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.01s sys)
=== generation 89.
    evaluation complete.  (0.49s wall, 0.49s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.33s user, 0.00s sys)
=== generation 90.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.35s user, 0.00s sys)
=== generation 91.
    evaluation complete.  (0.50s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.34s wall, 0.35s user, 0.00s sys)
=== generation 92.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.37s wall, 0.37s user, 0.00s sys)
=== generation 93.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.36s user, 0.00s sys)
=== generation 94.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 95.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.36s user, 0.00s sys)
=== generation 96.
    evaluation complete.  (0.53s wall, 0.53s user, 0.00s sys)
    breeding complete.    (0.37s wall, 0.37s user, 0.00s sys)
=== generation 97.
    evaluation complete.  (0.51s wall, 0.51s user, 0.00s sys)
    breeding complete.    (0.36s wall, 0.37s user, 0.00s sys)
=== generation 98.
    evaluation complete.  (0.52s wall, 0.52s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 99.
    evaluation complete.  (0.49s wall, 0.50s user, 0.00s sys)
    breeding complete.    (0.35s wall, 0.35s user, 0.00s sys)
=== generation 100.
    evaluation complete.  (0.50s wall, 0.50s user, 0.00s sys)

SYSTEM STATISTICS

------- memory -------
           allocated:      1023963556
               freed:      1023963556
           not freed:      0
       max allocated:      88035988
    malloc'ed blocks:      4364065
   realloc'ed blocks:      10
      free'ed blocks:      4364065

------- time -------
             overall:      147.13s wall, 88.09s user, 0.13s sys
          evaluation:      51.52s wall, 51.52s user, 0.02s sys
            breeding:      33.23s wall, 33.19s user, 0.06s sys

------- generation spaces -------
      space   0 size:      500
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.b.stt  ant_script2.c.sys  cgp_czj.o   exch.o      GNUmakefile   memory.o      random.o     tree.o
ant.his            ant_script2.b.sys  ant.sys            change.o    exit        [0m[38;5;34mgp[0m            mutate.o      reproduc.o
ant.prg            ant_script2.c.bst  app.c              ckpoint.o   fitness.o   gp.o          [38;5;27moutput_files[0m  santafe.trl
ant_script2.b.bst  ant_script2.c.gen  appdef.h           crossovr.o  function.c  individ.o     output.o      script2.c
ant_script2.b.gen  ant_script2.c.his  app.h              ephem.o     function.h  input.file    params.o      script2.e
ant_script2.b.his  ant_script2.c.prg  app.o              eval.o      function.o  losaltos.trl  populate.o    select.o
ant_script2.b.prg  ant_script2.c.stt  bstworst.o         event.o     genspace.o  main.o        pretty.o      tournmnt.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.c ./output_files/2.d/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ v[Kmv script2.e [K[K[K[K[K[K[K[K[K[K[K[K[Kmv ant_script2.
ant_script2.b.bst  ant_script2.b.his  ant_script2.b.stt  ant_script2.c.bst  ant_script2.c.his  ant_script2.c.stt
ant_script2.b.gen  ant_script2.b.prg  ant_script2.b.sys  ant_script2.c.gen  ant_script2.c.prg  ant_script2.c.sys
[dawdf@delmar ant]$ mv ant_script2.c.
ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys
[dawdf@delmar ant]$ mv ant_script2.c.
ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys
[dawdf@delmar ant]$ mv ant_script2.c.* ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv ant_script2.c.* ./output_files/2.c/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.b.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     tournmnt.o
ant.his            ant_script2.b.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tree.o
ant.prg            ant_script2.b.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o
ant_script2.b.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.b.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.e
ant_script2.b.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script 2.d
Script started, file is 2.d
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 3
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 3   4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 3
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 4 5 
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || move
Function "progn2" [#1]:
	F_progn2_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn2_1 [#Fs=0:#Ts=1] = || move
Function "progn3" [#2]:
	F_progn3_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn3_1 [#Fs=0:#Ts=1] = || move
	F_progn3_2 [#Fs=0:#Ts=0] = ||
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 
1


creating initial population(s):
    690 trees were generated to fill the population of 500 (500 trees).
    679 trees were generated to fill the population of 500 (500 trees).
    683 trees were generated to fill the population of 500 (500 trees).
    650 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    672 trees were generated to fill the population of 500 (500 trees).
    679 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    690 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    675 trees were generated to fill the population of 500 (500 trees).
    685 trees were generated to fill the population of 500 (500 trees).
    663 trees were generated to fill the population of 500 (500 trees).
    657 trees were generated to fill the population of 500 (500 trees).
    670 trees were generated to fill the population of 500 (500 trees).
    637 trees were generated to fill the population of 500 (500 trees).
    634 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    655 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.69s wall, 0.69s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.19s user, 0.01s sys)
=== generation 1.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.18s user, 0.00s sys)
=== generation 2.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.19s user, 0.00s sys)
=== generation 3.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.19s user, 0.01s sys)
=== generation 4.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.18s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.17s user, 0.00s sys)
=== generation 6.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.19s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.19s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.20s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.20s user, 0.01s sys)
=== generation 11.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.22s user, 0.00s sys)
=== generation 13.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.62s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.01s sys)
=== generation 15.
    evaluation complete.  (0.58s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.22s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.01s sys)
=== generation 24.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 26.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.55s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 38.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 39.
    evaluation complete.  (0.55s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 40.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 41.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 42.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 43.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 44.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 45.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 46.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.25s user, 0.00s sys)
=== generation 47.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 48.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 49.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 50.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 51.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.26s user, 0.00s sys)
=== generation 52.
    evaluation complete.  (0.62s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 53.
    evaluation complete.  (0.62s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 54.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.27s user, 0.00s sys)
=== generation 55.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 56.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 57.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 58.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 59.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 60.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 61.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 62.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 63.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 64.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 65.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 66.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.25s user, 0.01s sys)
=== generation 67.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.26s user, 0.00s sys)
=== generation 68.
    evaluation complete.  (0.60s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 69.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 70.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 71.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 72.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 73.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 74.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 75.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 76.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 77.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 78.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 79.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 80.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 81.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 82.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 83.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 84.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 85.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 86.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 87.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 88.
    evaluation complete.  (0.64s wall, 0.64s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 89.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.26s user, 0.00s sys)
=== generation 90.
    evaluation complete.  (0.62s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 91.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 92.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.25s user, 0.00s sys)
=== generation 93.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.27s user, 0.00s sys)
=== generation 94.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 95.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 96.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 97.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 98.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 99.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 100.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)

SYSTEM STATISTICS

------- memory -------
           allocated:      978125132
               freed:      978125132
           not freed:      0
       max allocated:      61474228
    malloc'ed blocks:      4352517
   realloc'ed blocks:      10
      free'ed blocks:      4352517

------- time -------
             overall:      208.64s wall, 83.34s user, 0.13s sys
          evaluation:      57.91s wall, 57.89s user, 0.00s sys
            breeding:      23.00s wall, 22.98s user, 0.06s sys

------- generation spaces -------
      space   0 size:      500
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is 2.d
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
2.d                ant_script2.b.prg  ant_script2.c.stt  bstworst.o  event.o     genspace.o    main.o        pretty.o     tree.o
ant.gen            ant_script2.b.stt  ant_script2.c.sys  cgp_czj.o   exch.o      GNUmakefile   memory.o      random.o
ant.his            ant_script2.b.sys  ant.sys            change.o    exit        [0m[38;5;34mgp[0m            mutate.o      reproduc.o
ant.prg            ant_script2.c.bst  app.c              ckpoint.o   fitness.o   gp.o          [38;5;27moutput_files[0m  santafe.trl
ant_script2.b.bst  ant_script2.c.gen  appdef.h           crossovr.o  function.c  individ.o     output.o      script2.e
ant_script2.b.gen  ant_script2.c.his  app.h              ephem.o     function.h  input.file    params.o      select.o
ant_script2.b.his  ant_script2.c.prg  app.o              eval.o      function.o  losaltos.trl  populate.o    tournmnt.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.e [K[Kd ./oi[Kt[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmv 2.s[Kd script2.d
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.d ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.d ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.d ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.d ./output_files/2.d/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv ant_script2.
ant_script2.b.bst  ant_script2.b.his  ant_script2.b.stt  ant_script2.c.bst  ant_script2.c.his  ant_script2.c.stt
ant_script2.b.gen  ant_script2.b.prg  ant_script2.b.sys  ant_script2.c.gen  ant_script2.c.prg  ant_script2.c.sys
[dawdf@delmar ant]$ mv ant_script2.d[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 803C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.c

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;118H2[13;2H[?12l[?25h[?25l[28;118H3[13;3H[?12l[?25h[?25l[28;118H4[13;4H[?12l[?25h[?25l[28;118H5[13;5H[?12l[?25h[?25l[28;118H6[13;6H[?12l[?25h[?25l[28;118H7[13;7H[?12l[?25h[?25l[28;118H8[13;8H[?12l[?25h[?25l[28;118H9[13;9H[?12l[?25h[?25l[28;118H10[13;10H[?12l[?25h[?25l[28;119H1[13;11H[?12l[?25h[?25l[28;119H2[13;12H[?12l[?25h[?25l[28;119H3[13;13H[?12l[?25h[?25l[28;119H4[13;14H[?12l[?25h[?25l[28;119H5[13;15H[?12l[?25h[?25l[28;119H6[13;16H[?12l[?25h[?25l[28;119H7[13;17H[?12l[?25h[?25l[28;119H8[13;18H[?12l[?25h[?25l[28;119H9[13;19H[?12l[?25h[?25l[28;118H20[13;20H[?12l[?25h[?25l[28;119H1[13;21H[?12l[?25h[?25l[28;119H2[13;22H[?12l[?25h[?25l[28;119H3[13;23H[?12l[?25h[?25l[28;119H4[13;24H[?12l[?25h[?25l[28;119H5[13;25H[?12l[?25h[?25l[28;119H6[13;26H[?12l[?25h[?25l[28;119H7[13;27H[?12l[?25h[?25l[28;119H8[13;28H[?12l[?25h[?25l[28;119H9[13;29H[?12l[?25h[?25l[28;118H30[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;14H[K[28;115H13,31[9CTop[13;31H[?12l[?25h[?25l[28;119H2[13;32H[?12l[?25h[?25l[13;31H[K[28;119H1[13;31H[?12l[?25h[?25ld[28;119H2[13;32H[?12l[?25h[28;1H[K[13;31H[?25l[28;115H13,31[9CTop[13;31H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 803C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ rm ant_script2.*
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.d
Script started, file is script2.d
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 3
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 2 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 3
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 4 5
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 21    1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=0:#Ts=1] = || move
Function "progn2" [#1]:
	F_progn2_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn2_1 [#Fs=0:#Ts=1] = || move
Function "progn3" [#2]:
	F_progn3_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_progn3_1 [#Fs=0:#Ts=1] = || move
	F_progn3_2 [#Fs=0:#Ts=0] = ||
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [2 members] = right left
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 2: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
'    690 trees were generated to fill the population of 500 (500 trees).
    679 trees were generated to fill the population of 500 (500 trees).
    683 trees were generated to fill the population of 500 (500 trees).
    650 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    672 trees were generated to fill the population of 500 (500 trees).
    679 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    690 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    675 trees were generated to fill the population of 500 (500 trees).
    685 trees were generated to fill the population of 500 (500 trees).
    663 trees were generated to fill the population of 500 (500 trees).
    657 trees were generated to fill the population of 500 (500 trees).
    670 trees were generated to fill the population of 500 (500 trees).
    637 trees were generated to fill the population of 500 (500 trees).
    634 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    671 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    676 trees were generated to fill the population of 500 (500 trees).
    667 trees were generated to fill the population of 500 (500 trees).
    655 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.63s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.16s user, 0.00s sys)
=== generation 1.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.18s user, 0.00s sys)
=== generation 2.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.18s user, 0.00s sys)
=== generation 3.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.18s wall, 0.18s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.18s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.62s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.19s user, 0.01s sys)
=== generation 6.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.21s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.19s wall, 0.20s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.20s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.19s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.55s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.20s wall, 0.20s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.21s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.21s user, 0.01s sys)
=== generation 13.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.21s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 19.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 20.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 21.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 22.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 23.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 24.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.21s user, 0.00s sys)
=== generation 25.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.01s sys)
=== generation 26.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 27.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 28.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 29.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 30.
    evaluation complete.  (0.54s wall, 0.54s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 31.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.21s wall, 0.22s user, 0.00s sys)
=== generation 32.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 33.
    evaluation complete.  (0.56s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 34.
    evaluation complete.  (0.55s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 35.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 36.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 37.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.25s user, 0.00s sys)
=== generation 38.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 39.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 40.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 41.
    evaluation complete.  (0.55s wall, 0.55s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 42.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 43.
    evaluation complete.  (0.58s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 44.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 45.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 46.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 47.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 48.
    evaluation complete.  (0.57s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 49.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 50.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 51.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.22s user, 0.00s sys)
=== generation 52.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 53.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.01s sys)
=== generation 54.
    evaluation complete.  (0.61s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.22s user, 0.00s sys)
=== generation 55.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.26s user, 0.00s sys)
=== generation 56.
    evaluation complete.  (0.62s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 57.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 58.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 59.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 60.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 61.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.23s user, 0.00s sys)
=== generation 62.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 63.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 64.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 65.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 66.
    evaluation complete.  (0.58s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 67.
    evaluation complete.  (0.62s wall, 0.63s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.26s user, 0.00s sys)
=== generation 68.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 69.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 70.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.27s wall, 0.27s user, 0.00s sys)
=== generation 71.
    evaluation complete.  (0.67s wall, 0.66s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 72.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 73.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.24s user, 0.00s sys)
=== generation 74.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 75.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 76.
    evaluation complete.  (0.62s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 77.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 78.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 79.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 80.
    evaluation complete.  (0.63s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 81.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.25s user, 0.00s sys)
=== generation 82.
    evaluation complete.  (0.64s wall, 0.64s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.24s user, 0.00s sys)
=== generation 83.
    evaluation complete.  (0.65s wall, 0.65s user, 0.00s sys)
    breeding complete.    (0.26s wall, 0.26s user, 0.00s sys)
=== generation 84.
    evaluation complete.  (0.60s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 85.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 86.
    evaluation complete.  (0.56s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 87.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 88.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 89.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 90.
    evaluation complete.  (0.57s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 91.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 92.
    evaluation complete.  (0.58s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 93.
    evaluation complete.  (0.58s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.23s wall, 0.23s user, 0.00s sys)
=== generation 94.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.24s user, 0.00s sys)
=== generation 95.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.00s sys)
=== generation 96.
    evaluation complete.  (0.63s wall, 0.63s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 97.
    evaluation complete.  (0.63s wall, 0.63s user, 0.00s sys)
    breeding complete.    (0.25s wall, 0.25s user, 0.00s sys)
=== generation 98.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.28s user, 0.00s sys)
=== generation 99.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.24s wall, 0.23s user, 0.00s sys)
=== generation 100.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)

SYSTEM STATISTICS

------- memory -------
           allocated:      978125132
               freed:      978125132
           not freed:      0
       max allocated:      61474228
    malloc'ed blocks:      4352517
   realloc'ed blocks:      10
      free'ed blocks:      4352517

------- time -------
             overall:      213.43s wall, 84.20s user, 0.13s sys
          evaluation:      58.90s wall, 58.91s user, 0.00s sys
            breeding:      22.98s wall, 22.86s user, 0.04s sys

------- generation spaces -------
      space   0 size:      500
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ 'exi[K[K[K[Kexit
exit
Script done, file is script2.d
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls ant
ant.gen            ant.prg            ant_script2.d.gen  ant_script2.d.prg  ant_script2.d.sys  
ant.his            ant_script2.d.bst  ant_script2.d.his  ant_script2.d.stt  ant.sys            
[dawdf@delmar ant]$ ls ant[K[K[K[K[K[Kmc[Kv script2.d ./
ant.gen            ant.sys            crossovr.o         function.o         memory.o           santafe.trl
ant.his            app.c              ephem.o            genspace.o         mutate.o           script2.d
ant.prg            appdef.h           eval.o             GNUmakefile        output_files/      script2.e
ant_script2.d.bst  app.h              event.o            gp                 output.o           select.o
ant_script2.d.gen  app.o              exch.o             gp.o               params.o           tournmnt.o
ant_script2.d.his  bstworst.o         exit               individ.o          populate.o         tree.o
ant_script2.d.prg  cgp_czj.o          fitness.o          input.file         pretty.o           
ant_script2.d.stt  change.o           function.c         losaltos.trl       random.o           
ant_script2.d.sys  ckpoint.o          function.h         main.o             reproduc.o         
[dawdf@delmar ant]$ mv script2.d ./oup[Ktput_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.d ./output_files/2.d/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.d.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     tournmnt.o
ant.his            ant_script2.d.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tree.o
ant.prg            ant_script2.d.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o
ant_script2.d.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.d.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.e
ant_script2.d.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.e 
ant.gen            ant.sys            crossovr.o         function.o         memory.o           santafe.trl
ant.his            app.c              ephem.o            genspace.o         mutate.o           script2.e
ant.prg            appdef.h           eval.o             GNUmakefile        output_files/      select.o
ant_script2.d.bst  app.h              event.o            gp                 output.o           tournmnt.o
ant_script2.d.gen  app.o              exch.o             gp.o               params.o           tree.o
ant_script2.d.his  bstworst.o         exit               individ.o          populate.o         
ant_script2.d.prg  cgp_czj.o          fitness.o          input.file         pretty.o           
ant_script2.d.stt  change.o           function.c         losaltos.trl       random.o           
ant_script2.d.sys  ckpoint.o          function.h         main.o             reproduc.o         
[dawdf@delmar ant]$ mv script2.e [K[K[K[K[K[K[K[K[K[Kant
ant.gen            ant.prg            ant_script2.d.gen  ant_script2.d.prg  ant_script2.d.sys  
ant.his            ant_script2.d.bst  ant_script2.d.his  ant_script2.d.stt  ant.sys            
[dawdf@delmar ant]$ mv ant_script2.d.* output_files/
2.a/           2.b/           2.c/           2.d/           2.e/           question2.tar  
[dawdf@delmar ant]$ mv ant_script2.d.* output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv ant_script2.d.* output_files/2.d/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     script2.e
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     select.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tournmnt.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl  tree.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script script2.e [K[Ke
Script started, file is script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 3 4 5
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=1:#Ts=1] = progn3 || move
Function "progn2" [#1]:
	F_progn2_0 [#Fs=1:#Ts=0] = progn3 ||
	F_progn2_1 [#Fs=1:#Ts=0] = progn3 ||
Function "progn3" [#2]:
	F_progn3_0 [#Fs=3:#Ts=3] = if-food-ahead progn2 progn3 || move right left
	F_progn3_1 [#Fs=3:#Ts=3] = if-food-ahead progn2 progn3 || move right left
	F_progn3_2 [#Fs=3:#Ts=3] = if-food-ahead progn2 progn3 || move right left
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left

	Both sets empty for function 2=progn3 argument 0

	Both sets empty for function 2=progn3 argument 1

	Both sets empty for function 2=progn3 argument 2


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [2 members] = if-food-ahead progn2
		T [2 members] = right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left
	Argument 1:
		F [2 members] = if-food-ahead progn2
		T [3 members] = move right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [0 members] =
		T [0 members] =
	Argument 1:
		F [0 members] =
		T [0 members] =
	Argument 2:
		F [0 members] =
		T [0 members] =

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [2 members, used]  and T [2 members, used]
	Weights: 1.000 1.000 -1.000 -1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000
	Argument 1: F [2 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 -1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [0 members, not used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels:
	Argument 1: F [0 members, not used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels:
	Argument 2: F [0 members, not used]  and T [0 members, not used]
	Weights: -1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels:

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    697 trees were generated to fill the population of 500 (500 trees).
    674 trees were generated to fill the population of 500 (500 trees).
    673 trees were generated to fill the population of 500 (500 trees).
    673 trees were generated to fill the population of 500 (500 trees).
    658 trees were generated to fill the population of 500 (500 trees).
    664 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    670 trees were generated to fill the population of 500 (500 trees).
    651 trees were generated to fill the population of 500 (500 trees).
    644 trees were generated to fill the population of 500 (500 trees).
    643 trees were generated to fill the population of 500 (500 trees).
    697 trees were generated to fill the population of 500 (500 trees).
    675 trees were generated to fill the population of 500 (500 trees).
    677 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    685 trees were generated to fill the population of 500 (500 trees).
    654 trees were generated to fill the population of 500 (500 trees).
    661 trees were generated to fill the population of 500 (500 trees).
    661 trees were generated to fill the population of 500 (500 trees).
    659 trees were generated to fill the population of 500 (500 trees).
    664 trees were generated to fill the population of 500 (500 trees).
    691 trees were generated to fill the population of 500 (500 trees).
    666 trees were generated to fill the population of 500 (500 trees).
    660 trees were generated to fill the population of 500 (500 trees).
    662 trees were generated to fill the population of 500 (500 trees).
    656 trees were generated to fill the population of 500 (500 trees).
    644 trees were generated to fill the population of 500 (500 trees).
    652 trees were generated to fill the population of 500 (500 trees).
    669 trees were generated to fill the population of 500 (500 trees).
    634 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.88s wall, 0.88s user, 0.00s sys)
    breeding complete.    (0.22s wall, 0.21s user, 0.01s sys)
=== generation 1.
    evaluation complete.  (0.74s wall, 0.74s user, 0.00s sys)
    breeding complete.    (0.28s wall, 0.27s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.82s wall, 0.82s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.29s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.77s wall, 0.77s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.31s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.76s wall, 0.76s user, 0.00s sys)
    breeding complete.    (0.30s wall, 0.29s user, 0.00s sys)
=== generation 5.
    evaluation complete.  (0.82s wall, 0.82s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      578363564
               freed:      578363564
           not freed:      0
       max allocated:      67096188
    malloc'ed blocks:      263997
   realloc'ed blocks:      10
      free'ed blocks:      263997

------- time -------
             overall:      151.87s wall, 6.52s user, 0.07s sys
          evaluation:      4.79s wall, 4.79s user, 0.00s sys
            breeding:      1.40s wall, 1.37s user, 0.03s sys

------- generation spaces -------
      space   0 size:      500
      space   1 size:      100
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ exit
exit
Script done, file is script2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.d.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     tournmnt.o
ant.his            ant_script2.d.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tree.o
ant.prg            ant_script2.d.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o
ant_script2.d.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.d.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.e
ant_script2.d.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.e ./output_files/2.e/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv ant_script2.d.
ant_script2.d.bst  ant_script2.d.gen  ant_script2.d.his  ant_script2.d.prg  ant_script2.d.stt  ant_script2.d.sys
[dawdf@delmar ant]$ mv ant_script2.d.
ant_script2.d.bst  ant_script2.d.gen  ant_script2.d.his  ant_script2.d.prg  ant_script2.d.stt  ant_script2.d.sys
[dawdf@delmar ant]$ mv ant_script2.d.
ant_script2.d.bst  ant_script2.d.gen  ant_script2.d.his  ant_script2.d.prg  ant_script2.d.stt  ant_script2.d.sys
[dawdf@delmar ant]$ mv ant_script2.d.
ant_script2.d.bst  ant_script2.d.gen  ant_script2.d.his  ant_script2.d.prg  ant_script2.d.stt  ant_script2.d.sys
[dawdf@delmar ant]$ mv ant_script2.d.* ./output_files/2.e
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     select.o
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     tournmnt.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tree.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion2.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ rm -rd [K[K[K[Kquestion2.tar 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ tar -cvf^C
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ r[Ktar -cvf question_new.tar *
2.a/
2.a/ant_script2.a.bst
2.a/ant_script2.a.gen
2.a/ant_script2.a.his
2.a/ant_script2.a.prg
2.a/ant_script2.a.stt
2.a/ant_script2.a.sys
2.a/script2.a
2.b/
2.b/ant_script2.b.bst
2.b/ant_script2.b.gen
2.b/ant_script2.b.his
2.b/ant_script2.b.prg
2.b/ant_script2.b.stt
2.b/ant_script2.b.sys
2.b/script2.b
2.c/
2.c/ant_script2.c.bst
2.c/ant_script2.c.gen
2.c/ant_script2.c.his
2.c/ant_script2.c.prg
2.c/ant_script2.c.stt
2.c/ant_script2.c.sys
2.c/script2.c
2.d/
2.d/ant_script2.d.bst
2.d/ant_script2.d.gen
2.d/ant_script2.d.his
2.d/ant_script2.d.prg
2.d/ant_script2.d.stt
2.d/ant_script2.d.sys
2.d/script2.d
2.d/script2.c
2.e/
2.e/script2.e
2.e/ant_script2.d.bst
2.e/ant_script2.d.gen
2.e/ant_script2.d.his
2.e/ant_script2.d.prg
2.e/ant_script2.d.stt
2.e/ant_script2.d.sys
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion_new.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ pwd
/accounts/students/d/dawdf/cgp/lilgp1.02/app/ant/output_files
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion_new.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     select.o
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     tournmnt.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tree.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ ls
[0m[38;5;27mant[0m  [38;5;27mlawnmower[0m  [38;5;27mmultiplexer[0m  [38;5;27mregression[0m  [38;5;27mskeleton[0m  [38;5;27mtwobox[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ cd multiplexer/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output
bash: cd: output: No such file or directory
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1_final.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ rm da[K[K[K[K[Krm question1_final.tar 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ c[Kcd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ ls
[0m[38;5;27mant[0m  [38;5;27mlawnmower[0m  [38;5;27mmultiplexer[0m  [38;5;27mregression[0m  [38;5;27mskeleton[0m  [38;5;27mtwobox[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02[dawdf@delmar lilgp1.02]$ ls
[0m[38;5;27mapp[0m  [38;5;27maux[0m  CHANGES  [38;5;27mdocs[0m  [38;5;27mkernel[0m  LICENSE  NEWINFO  [38;5;27mparams[0m  README  UPGRADE
]0;dawdf@delmar:~/cgp/lilgp1.02[dawdf@delmar lilgp1.02]$ cd kernel/
]0;dawdf@delmar:~/cgp/lilgp1.02/kernel[dawdf@delmar kernel]$ ls
bstworst.c  ckpoint.c   eval.c     ev_none.h   ev_times.h  GNUmakefile.kernel  main.c    params.c    protos.h    select.c
cgp_czj.c   crossovr.c  event.c    ev_time.c   exch.c      gp.c                memory.c  populate.c  random.c    tournmnt.c
cgp_czj.h   defines.h   event.h    ev_time.h   fitness.c   individ.c           mutate.c  pretty.c    README_czj  tree.c
change.c    ephem.c     ev_none.c  ev_times.c  genspace.c  lilgp.h             output.c  protoapp.h  reproduc.c  types.h
]0;dawdf@delmar:~/cgp/lilgp1.02/kernel[dawdf@delmar kernel]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02[dawdf@delmar lilgp1.02]$ ls
[0m[38;5;27mapp[0m  [38;5;27maux[0m  CHANGES  [38;5;27mdocs[0m  [38;5;27mkernel[0m  LICENSE  NEWINFO  [38;5;27mparams[0m  README  UPGRADE
]0;dawdf@delmar:~/cgp/lilgp1.02[dawdf@delmar lilgp1.02]$ cd cg[K[K[Kcd app/
bash: cdcd: command not found
]0;dawdf@delmar:~/cgp/lilgp1.02[dawdf@delmar lilgp1.02]$ l[Kcd app/
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ ls
[0m[38;5;27mant[0m  [38;5;27mlawnmower[0m  [38;5;27mmultiplexer[0m  [38;5;27mregression[0m  [38;5;27mskeleton[0m  [38;5;27mtwobox[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ cd ant/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     select.o
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     tournmnt.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tree.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 803C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.d

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;1H[K[28;1H:[?12l[?25hW[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[97m[41mE492: Not an editor command: Wq[m[83C13,1[10CTop[13;1H[?12l[?25h[?25l[28;1H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 38L, 803C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ vi input.file 
[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;28r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[28;1H"input.file" 38L, 803C[>c[1;1H[34m###
### sample input parameter file for the artificial ant.
###

# app-specific parameters[m
app.trail = santafe.trl
app.maxtime = 400

max_generations = 100
pop_size = 500
random_seed = 1

output.basename = ant_script2.d

[34m# how to generate the initial population[m
init.method = half_and_half
init.depth = 2-8
max_nodes = 500
[34m# limits on tree size.[m
max_depth = 15
multiple.subpops = 30
multiple.exch_gen = 101
[34m## breeding parameters (emulates Koza Ch. 7)[m

breed_phases = 4

breed[1].operator = crossover, select=(tournament, size=7)[28;115H13,1[10CTop[13;1H[?12l[?25h[?25l[28;116H4,0-1[14;1H[?12l[?25h[?25l[28;116H3,1  [13;1H[?12l[?25h[?25l[28;118H2[13;2H[?12l[?25h[?25l[28;118H3[13;3H[?12l[?25h[?25l[28;118H4[13;4H[?12l[?25h[?25l[28;118H5[13;5H[?12l[?25h[?25l[28;118H6[13;6H[?12l[?25h[?25l[28;118H7[13;7H[?12l[?25h[?25l[28;118H8[13;8H[?12l[?25h[?25l[28;118H9[13;9H[?12l[?25h[?25l[28;118H10[13;10H[?12l[?25h[?25l[28;119H1[13;11H[?12l[?25h[?25l[28;119H2[13;12H[?12l[?25h[?25l[28;119H3[13;13H[?12l[?25h[?25l[28;119H4[13;14H[?12l[?25h[?25l[28;119H5[13;15H[?12l[?25h[?25l[28;119H6[13;16H[?12l[?25h[?25l[28;119H7[13;17H[?12l[?25h[?25l[28;119H8[13;18H[?12l[?25h[?25l[28;119H9[13;19H[?12l[?25h[?25l[28;118H20[13;20H[?12l[?25h[?25l[28;119H1[13;21H[?12l[?25h[?25l[28;119H2[13;22H[?12l[?25h[?25l[28;119H3[13;23H[?12l[?25h[?25l[28;119H4[13;24H[?12l[?25h[?25l[28;119H5[13;25H[?12l[?25h[?25l[28;119H6[13;26H[?12l[?25h[?25l[28;119H7[13;27H[?12l[?25h[?25l[28;119H8[13;28H[?12l[?25h[?25l[28;119H9[13;29H[?12l[?25h[?25l[28;118H30[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25l[13;31H[K[28;119H0[13;30H[?12l[?25h[?25l[28;1H[1m-- INSERT --[m[28;14H[K[28;115H13,30[9CTop[13;30H[?12l[?25h[?25l[28;119H1[13;31H[?12l[?25h[?25lc[28;119H2[13;32H[?12l[?25h[?25l[14;27r[14;1H[L[1;28r[28;115H[K[28;115H14,1[10CTop[14;1H[?12l[?25h[28;1H[K[14;1H[?25l[28;115H14,0-1[8CTop[14;1H[?12l[?25h[?25l[28;115H[K[28;1H:[?12l[?25hW[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[97m[41mE492: Not an editor command: Wq[m[83C14,0-1[8CTop[14;1H[?12l[?25h[?25l[28;1H[K[28;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"input.file" 39L, 804C written
[?1l>[?12l[?25h[?1049l]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ script sc`[Kript2.c
Script started, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[?1034h[dawdf@delmar ant]$ exit./gp -f input.file 

[ lil-gp Genetic Programming System.
[ Portions copyright (c) 1995 Michigan State University.  All rights reserved.
[ kernel version 1.0; 11 July 1995.


initialization:
    parameter database.
    ephemeral random constants.
    generation spaces.
building function set(s):
    set 0: if-food-ahead progn2 progn3 move right left
    tree 0 uses function set 0.
    function set complete.
    seeding random number generator with 1.


		WELCOME TO cgp-lilgp 1.1/1.02

		developed by
	Cezary Z. Janikow
	University of Missouri - St. Louis
	emailto:janikow@arch.umsl.edu
	http://www.cs.umsl.edu/Faculty/janikow/janikow.html
	ftp://radom.umsl.edu

		implementation team:
	Cezary Z. Janikow, leader
	Greg Banister, UMR student
	Scott DeWeese, UMSL student




	This is distributed as addition to lil-gp

	No explicit/implicit warranty




























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 0=if-food-ahead:
	F_if-food-ahead (exclusions) [0..2] = 
	F_if-food-ahead_0 (exclusions) [0..5] = 
	T_if-food-ahead_0 (inclusions) [0..5] = 3
	F_if-food-ahead_1 (exclusions) [0..5] = 
	T_if-food-ahead_1 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 1=progn2:
	F_progn2 (exclusions) [0..2] = 
	F_progn2_0 (exclusions) [0..5] = 
	T_progn2_0 (inclusions) [0..5] = 0 1 2 3 4 5
	F_progn2_1 (exclusions) [0..5] = 
	T_progn2_1 (inclusions) [0..5] = 0 1 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Function 2=progn3:
	F_progn3 (exclusions) [0..2] = 
	F_progn3_0 (exclusions) [0..5] = 
	T_progn3_0 (inclusions) [0..5] = 0 1 2 3 4 5
	F_progn3_1 (exclusions) [0..5] = 
	T_progn3_1 (inclusions) [0..5] = 0 1 2 3 4 5
	F_progn3_2 (exclusions) [0..5] = 
	T_progn3_2 (inclusions) [0..5] = 0 1 2 3 4 5

























3 ordinary functions: 
    0 = if-food-ahead
    1 = progn2
    2 = progn3
3 terminals (ordinary and ephemeral): 
    3 = move
    4 = right
    5 = left
Separate entries by [ ,;]  Hit <ENTER> for empty set
Use either function names or numbers, in any order

Root:	F^Root (exclusions) [0..5] = 
	T^Root (inclusions) [0..5] = 0

The normal constraints are...


		CONSTRAINTS
Function "if-food-ahead" [#0]:
	F_if-food-ahead_0 [#Fs=3:#Ts=2] = if-food-ahead progn2 progn3 || right left
	F_if-food-ahead_1 [#Fs=0:#Ts=0] = ||
Function "progn2" [#1]:
	F_progn2_0 [#Fs=0:#Ts=0] = ||
	F_progn2_1 [#Fs=0:#Ts=0] = ||
Function "progn3" [#2]:
	F_progn3_0 [#Fs=0:#Ts=0] = ||
	F_progn3_1 [#Fs=0:#Ts=0] = ||
	F_progn3_2 [#Fs=0:#Ts=0] = ||
Root:
	F_Root [#Fs=2:#Ts=3] =  progn2 progn3 || move right left


The following mutation sets were computed...

Function "if-food-ahead" [#0]: 2 mutation set pairs
	Argument 0:
		F [0 members] =
		T [1 members] = move
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn2" [#1]: 2 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Function "progn3" [#2]: 3 mutation set pairs
	Argument 0:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left
	Argument 1:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left
	Argument 2:
		F [3 members] = if-food-ahead progn2 progn3
		T [3 members] = move right left

Root:
		F [1 members] = if-food-ahead
		T [0 members] =




Setting initial weights for mutation set members...


Initial weights are all equal. Do you accept [0 to change]: 1

Wheels are...


These are weights/wheels...

Function "if-food-ahead" [#0]: 2 arguments
	Argument 0: F [0 members, not used]  and T [1 members, used]
	Weights: -1.000 -1.000 -1.000 1.000 -1.000 -1.000
	Wheels: 1.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn2" [#1]: 2 arguments
	Argument 0: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Function "progn3" [#2]: 3 arguments
	Argument 0: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000
	Argument 1: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000
	Argument 2: F [3 members, used]  and T [3 members, used]
	Weights: 1.000 1.000 1.000 1.000 1.000 1.000
	Wheels: 1.000 2.000 3.000 4.000 5.000 6.000

Root: F [1 members, used] and T [0 members, not used]
	Weights: 1.000 -1.000 -1.000 -1.000 -1.000 -1.000
	Wheels: 1.000

Send 1 to continue, anything else to quit cgp-lil-gp: 1


creating initial population(s):
    586 trees were generated to fill the population of 500 (500 trees).
    573 trees were generated to fill the population of 500 (500 trees).
    586 trees were generated to fill the population of 500 (500 trees).
    570 trees were generated to fill the population of 500 (500 trees).
    576 trees were generated to fill the population of 500 (500 trees).
    570 trees were generated to fill the population of 500 (500 trees).
    577 trees were generated to fill the population of 500 (500 trees).
    619 trees were generated to fill the population of 500 (500 trees).
    593 trees were generated to fill the population of 500 (500 trees).
    563 trees were generated to fill the population of 500 (500 trees).
    566 trees were generated to fill the population of 500 (500 trees).
    575 trees were generated to fill the population of 500 (500 trees).
    583 trees were generated to fill the population of 500 (500 trees).
    580 trees were generated to fill the population of 500 (500 trees).
    581 trees were generated to fill the population of 500 (500 trees).
    594 trees were generated to fill the population of 500 (500 trees).
    615 trees were generated to fill the population of 500 (500 trees).
    593 trees were generated to fill the population of 500 (500 trees).
    579 trees were generated to fill the population of 500 (500 trees).
    567 trees were generated to fill the population of 500 (500 trees).
    580 trees were generated to fill the population of 500 (500 trees).
    573 trees were generated to fill the population of 500 (500 trees).
    570 trees were generated to fill the population of 500 (500 trees).
    580 trees were generated to fill the population of 500 (500 trees).
    576 trees were generated to fill the population of 500 (500 trees).
    600 trees were generated to fill the population of 500 (500 trees).
    578 trees were generated to fill the population of 500 (500 trees).
    565 trees were generated to fill the population of 500 (500 trees).
    580 trees were generated to fill the population of 500 (500 trees).
    585 trees were generated to fill the population of 500 (500 trees).
    initial population(s) complete.
building subpopulation exchange topology:


starting evolution.
no checkpointing will be done.
=== generation 0.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.53s wall, 0.51s user, 0.02s sys)
=== generation 1.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.59s wall, 0.58s user, 0.01s sys)
=== generation 2.
    evaluation complete.  (0.56s wall, 0.56s user, 0.00s sys)
    breeding complete.    (0.63s wall, 0.63s user, 0.01s sys)
=== generation 3.
    evaluation complete.  (0.57s wall, 0.57s user, 0.00s sys)
    breeding complete.    (0.71s wall, 0.71s user, 0.00s sys)
=== generation 4.
    evaluation complete.  (0.59s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.76s wall, 0.75s user, 0.01s sys)
=== generation 5.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.75s wall, 0.74s user, 0.01s sys)
=== generation 6.
    evaluation complete.  (0.58s wall, 0.58s user, 0.00s sys)
    breeding complete.    (0.74s wall, 0.74s user, 0.00s sys)
=== generation 7.
    evaluation complete.  (0.61s wall, 0.61s user, 0.00s sys)
    breeding complete.    (0.73s wall, 0.73s user, 0.00s sys)
=== generation 8.
    evaluation complete.  (0.61s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.68s wall, 0.67s user, 0.00s sys)
=== generation 9.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.68s wall, 0.68s user, 0.00s sys)
=== generation 10.
    evaluation complete.  (0.60s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.72s wall, 0.72s user, 0.00s sys)
=== generation 11.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.70s wall, 0.69s user, 0.00s sys)
=== generation 12.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.68s wall, 0.68s user, 0.01s sys)
=== generation 13.
    evaluation complete.  (0.59s wall, 0.59s user, 0.00s sys)
    breeding complete.    (0.72s wall, 0.72s user, 0.00s sys)
=== generation 14.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.70s wall, 0.70s user, 0.00s sys)
=== generation 15.
    evaluation complete.  (0.59s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.75s wall, 0.75s user, 0.00s sys)
=== generation 16.
    evaluation complete.  (0.63s wall, 0.62s user, 0.00s sys)
    breeding complete.    (0.72s wall, 0.71s user, 0.00s sys)
=== generation 17.
    evaluation complete.  (0.60s wall, 0.60s user, 0.00s sys)
    breeding complete.    (0.72s wall, 0.72s user, 0.00s sys)
=== generation 18.
    evaluation complete.  (0.64s wall, 0.64s user, 0.00s sys)
user termination criterion met.

SYSTEM STATISTICS

------- memory -------
           allocated:      817885244
               freed:      817885244
           not freed:      0
       max allocated:      167038748
    malloc'ed blocks:      845456
   realloc'ed blocks:      18
      free'ed blocks:      845456

------- time -------
             overall:      78.36s wall, 25.61s user, 0.14s sys
          evaluation:      11.28s wall, 11.27s user, 0.00s sys
            breeding:      12.51s wall, 12.43s user, 0.07s sys

------- generation spaces -------
      space   0 size:      1200
      space   1 size:      200
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ l[Kex[Kxit
exit
Script done, file is script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cat ant
ant.gen            ant.prg            ant_script2.c.gen  ant_script2.c.prg  ant_script2.c.sys  
ant.his            ant_script2.c.bst  ant_script2.c.his  ant_script2.c.stt  ant.sys            
[dawdf@delmar ant]$ cat ant_script2.c.
ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys
[dawdf@delmar ant]$ cat ant_script2.c.bst ][K
=== BEST-OF-RUN ===
              generation: 18
           subpopulation: 15
                   nodes: 27
                   depth: 6
                    hits: 89
TOP INDIVIDUAL:



-- #1 --
                    hits: 89
             raw fitness: 89.0000
    standardized fitness: 0.0000
        adjusted fitness: 1.0000
TREE:
 (if-food-ahead move
                (progn3 (if-food-ahead move left)
                        (if-food-ahead move
                                       (progn3 (if-food-ahead move right) right
                                               (if-food-ahead move left))) move))
BEST OF RUN INDIVIDUAL:
   time taken: 388/400
food consumed: 89/89
path: 
     xxxx............................
     ...x............................
     ...x....................xxxxxx..
     ...x....................x....x..
     ...x....................x....x..
     ...xxxxxxxxxx.......xxxxx....x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x........x..
     ............x.......x..xxxxxxx..
     ............x...xxxxx..x........
     ............x...x......x........
     ............x...x......x........
     ............x...x......xxxxx....
     ............x...x..........x....
     ............x...x..........x....
     ............x...x..........x....
     ............x...x......xxxxx....
     ............x...x......x........
     .xxxxxxxxxxxx...x......S........
     .x..............x...............
     .x..............x...............
     .x.....xxxxxxxxxx...............
     .x.....x........................
     .x.....x........................
     .xxxxxxx........................
     ................................
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen            ant_script2.c.prg  app.h       crossovr.o  fitness.o    [0m[38;5;34mgp[0m            memory.o      pretty.o     tournmnt.o
ant.his            ant_script2.c.stt  app.o       ephem.o     function.c   gp.o          mutate.o      random.o     tree.o
ant.prg            ant_script2.c.sys  bstworst.o  eval.o      function.h   individ.o     [38;5;27moutput_files[0m  reproduc.o
ant_script2.c.bst  ant.sys            cgp_czj.o   event.o     function.o   input.file    output.o      santafe.trl
ant_script2.c.gen  app.c              change.o    exch.o      genspace.o   losaltos.trl  params.o      script2.c
ant_script2.c.his  appdef.h           ckpoint.o   exit        GNUmakefile  main.o        populate.o    select.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv script2.c ./output_files/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv script2.c ./output_files/2.c/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ mv ant_script2.c.* ./output_F[Kfiles/2.
2.a/ 2.b/ 2.c/ 2.d/ 2.e/ 
[dawdf@delmar ant]$ mv ant_script2.c.* ./output_files/2.c/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cd output_files/2.c/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ ls
ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys  script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ tar -cv [Kf 2.c *
ant_script2.c.bst
ant_script2.c.gen
ant_script2.c.his
ant_script2.c.prg
ant_script2.c.stt
ant_script2.c.sys
script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ ls
2.c  ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys  script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ pwd
/accounts/students/d/dawdf/cgp/lilgp1.02/app/ant/output_files/2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ ls
2.c  ant_script2.c.bst  ant_script2.c.gen  ant_script2.c.his  ant_script2.c.prg  ant_script2.c.stt  ant_script2.c.sys  script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ rm 2.c 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ rm 2.c ls[Kpwd[1Plstar -cvf 2.c *ls[Ktar -cvf 2.c *. *t *a *r *
ant_script2.c.bst
ant_script2.c.gen
ant_script2.c.his
ant_script2.c.prg
ant_script2.c.stt
ant_script2.c.sys
script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ ls
[0m[38;5;9m2.c.tar[0m            ant_script2.c.gen  ant_script2.c.prg  ant_script2.c.sys
ant_script2.c.bst  ant_script2.c.his  ant_script2.c.stt  script2.c
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files/2.c[dawdf@delmar 2.c]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m2.a[0m  [38;5;27m2.b[0m  [38;5;27m2.c[0m  [38;5;27m2.d[0m  [38;5;27m2.e[0m  [38;5;9mquestion_new.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant/output_files[dawdf@delmar output_files]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ ls
ant.gen  app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          losaltos.trl  [38;5;27moutput_files[0m  pretty.o     select.o
ant.his  appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        main.o        output.o      random.o     tournmnt.o
ant.prg  app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   memory.o      params.o      reproduc.o   tree.o
ant.sys  app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  mutate.o      populate.o    santafe.trl
]0;dawdf@delmar:~/cgp/lilgp1.02/app/ant[dawdf@delmar ant]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ ls
[0m[38;5;27mant[0m  [38;5;27mlawnmower[0m  [38;5;27mmultiplexer[0m  [38;5;27mregression[0m  [38;5;27mskeleton[0m  [38;5;27mtwobox[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app[dawdf@delmar app]$ cd multiplexer/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ ls
app.c     bstworst.o  crossovr.o  exch.o      function.h   [0m[38;5;34mgp[0m          main.o     multi.his  mutate.o      populate.o  select.o
appdef.h  cgp_czj.o   ephem.o     exit        function.o   gp.o        memory.o   multi.prg  [38;5;27moutput_files[0m  pretty.o    tournmnt.o
app.h     change.o    eval.o      fitness.o   genspace.o   individ.o   multi.bst  multi.stt  output.o      random.o    tree.o
app.o     ckpoint.o   event.o     function.c  GNUmakefile  input.file  multi.gen  multi.sys  params.o      reproduc.o
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer[dawdf@delmar multiplexer]$ cd output_files/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ cd 1.
1.a/ 1.b/ 1.c/ 1.d/ 1.e/ 
[dawdf@delmar output_files]$ cd 1.e/
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ ls
multi_script1.e.bst  multi_script1.e.his  multi_script1.e.stt  script1.e
multi_script1.e.gen  multi_script1.e.prg  multi_script1.e.sys
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ cat multi_script1.e.stt 
0 1 0.5631 0.6875 0.5000 137.680 4.630 382 7 94 5 0.5631 0.6875 0.5000 137.680 4.630 382 7 94 5 
0 2 0.5613 0.7500 0.5000 113.080 4.440 382 7 94 5 0.5613 0.7500 0.5000 113.080 4.440 382 7 94 5 
0 3 0.5669 0.6875 0.5000 126.400 4.620 22 3 46 4 0.5669 0.6875 0.5000 126.400 4.620 22 3 46 4 
0 4 0.5631 0.7500 0.5000 102.880 4.220 22 3 94 5 0.5631 0.7500 0.5000 102.880 4.220 22 3 94 5 
0 5 0.5606 0.7500 0.5000 131.680 4.660 22 3 382 7 0.5606 0.7500 0.5000 131.680 4.660 22 3 382 7 
0 6 0.5656 0.6875 0.5000 120.400 4.500 46 4 22 3 0.5656 0.6875 0.5000 120.400 4.500 46 4 22 3 
0 7 0.5631 0.7500 0.5000 141.880 4.740 382 7 22 3 0.5631 0.7500 0.5000 141.880 4.740 382 7 22 3 
0 8 0.5650 0.8125 0.5000 130.120 4.470 22 3 382 7 0.5650 0.8125 0.5000 130.120 4.470 22 3 382 7 
0 9 0.5569 0.6875 0.5000 115.360 4.510 94 5 22 3 0.5569 0.6875 0.5000 115.360 4.510 94 5 22 3 
0 10 0.5606 0.6875 0.5000 105.880 4.360 190 6 46 4 0.5606 0.6875 0.5000 105.880 4.360 190 6 46 4 
0 0 0.5626 0.8125 0.5000 122.536 4.515 22 3 94 5 0.5626 0.8125 0.5000 122.536 4.515 22 3 94 5 
1 1 0.6331 0.7500 0.5000 158.410 5.220 232 9 10 2 0.5981 0.7500 0.5000 148.045 4.925 232 9 94 5 
1 2 0.6262 0.7500 0.5000 76.240 4.380 382 7 4 1 0.5938 0.7500 0.5000 94.660 4.410 382 7 94 5 
1 3 0.6331 0.6875 0.5000 130.330 5.130 190 6 22 3 0.6000 0.6875 0.5000 128.365 4.875 22 3 46 4 
1 4 0.6288 0.7500 0.5000 94.660 4.830 40 5 4 1 0.5959 0.7500 0.5000 98.770 4.525 22 3 94 5 
1 5 0.6294 0.7500 0.5000 107.740 4.810 94 5 4 1 0.5950 0.7500 0.5000 119.710 4.735 22 3 382 7 
1 6 0.6225 0.7500 0.5000 129.700 5.050 10 2 10 2 0.5941 0.7500 0.5000 125.050 4.775 10 2 22 3 
1 7 0.6375 0.7500 0.5000 161.020 5.420 376 7 4 1 0.6003 0.7500 0.5000 151.450 5.080 382 7 22 3 
1 8 0.6400 0.8125 0.5000 93.700 4.510 22 3 16 3 0.6025 0.8125 0.5000 111.910 4.490 22 3 382 7 
1 9 0.6144 0.7500 0.5000 117.640 4.990 100 6 13 3 0.5856 0.7500 0.5000 116.500 4.750 100 6 22 3 
1 10 0.6088 0.6875 0.5000 114.250 4.850 64 6 16 3 0.5847 0.6875 0.5000 110.065 4.605 190 6 46 4 
1 0 0.6274 0.8125 0.5000 118.369 4.919 22 3 10 2 0.5950 0.8125 0.5000 120.453 4.717 22 3 94 5 
2 1 0.6706 0.7500 0.5000 180.100 6.140 223 9 43 4 0.6223 0.7500 0.5000 158.730 5.330 232 9 94 5 
2 2 0.6750 0.7500 0.5625 92.140 4.960 382 7 22 3 0.6208 0.7500 0.5000 93.820 4.593 382 7 94 5 
2 3 0.6687 0.8125 0.5000 160.060 6.220 64 6 28 4 0.6229 0.8125 0.5000 138.930 5.323 64 6 46 4 
2 4 0.6644 0.7500 0.5000 83.680 4.890 28 4 4 1 0.6188 0.7500 0.5000 93.740 4.647 22 3 94 5 
2 5 0.6831 0.7500 0.5000 101.410 5.200 97 6 85 5 0.6244 0.7500 0.5000 113.610 4.890 22 3 382 7 
2 6 0.6725 0.7500 0.5625 175.810 5.980 196 7 97 6 0.6202 0.7500 0.5000 141.970 5.177 10 2 22 3 
2 7 0.6981 0.8125 0.5000 293.380 7.010 400 9 10 2 0.6329 0.8125 0.5000 198.760 5.723 400 9 22 3 
2 8 0.6950 0.8125 0.5000 58.000 4.570 37 5 4 1 0.6333 0.8125 0.5000 93.940 4.517 22 3 382 7 
2 9 0.6637 0.8125 0.5000 137.230 5.580 46 4 130 7 0.6117 0.8125 0.5000 123.410 5.027 46 4 22 3 
2 10 0.6325 0.7500 0.5000 112.210 5.280 28 4 46 6 0.6006 0.7500 0.5000 110.780 4.830 28 4 46 4 
2 0 0.6724 0.8125 0.5000 139.402 5.583 64 6 43 4 0.6208 0.8125 0.5000 126.769 5.006 22 3 94 5 
3 1 0.6969 0.8125 0.5000 202.030 7.430 232 9 7 2 0.6409 0.8125 0.5000 169.555 5.855 232 9 94 5 
3 2 0.6906 0.7500 0.5625 117.910 5.280 94 5 22 3 0.6383 0.7500 0.5000 99.843 4.765 382 7 94 5 
3 3 0.6963 0.9375 0.5625 176.350 6.880 64 6 100 6 0.6412 0.9375 0.5000 148.285 5.713 64 6 46 4 
3 4 0.6937 0.7500 0.5625 62.950 4.870 154 6 28 4 0.6375 0.7500 0.5000 86.043 4.702 22 3 94 5 
3 5 0.7131 0.8125 0.5000 107.260 6.110 58 5 10 2 0.6466 0.8125 0.5000 112.022 5.195 58 5 382 7 
3 6 0.7000 0.8125 0.5625 176.080 6.300 190 7 4 1 0.6402 0.8125 0.5000 150.498 5.457 190 7 22 3 
3 7 0.7425 0.8125 0.5625 359.380 7.860 364 7 10 2 0.6603 0.8125 0.5000 238.915 6.258 400 9 22 3 
3 8 0.7425 0.8750 0.5625 44.800 4.380 28 4 4 1 0.6606 0.8750 0.5000 81.655 4.482 28 4 382 7 
3 9 0.7150 0.8125 0.5625 134.590 6.100 112 9 85 5 0.6375 0.8125 0.5000 126.205 5.295 46 4 22 3 
3 10 0.6675 0.7500 0.5625 100.540 5.550 40 5 10 2 0.6173 0.7500 0.5000 108.220 5.010 28 4 46 4 
3 0 0.7058 0.9375 0.5000 148.189 6.076 64 6 7 2 0.6420 0.9375 0.5000 132.124 5.273 64 6 94 5 
4 1 0.7469 0.8125 0.5625 222.100 9.140 232 9 34 4 0.6621 0.8125 0.5000 180.064 6.512 232 9 94 5 
4 2 0.7256 0.8125 0.5625 200.350 6.570 394 9 4 1 0.6558 0.8125 0.5000 119.944 5.126 394 9 94 5 
4 3 0.7550 0.9375 0.5000 110.890 6.830 64 6 46 4 0.6640 0.9375 0.5000 140.806 5.936 64 6 46 4 
4 4 0.7131 0.7500 0.5625 52.690 5.160 106 7 40 4 0.6526 0.7500 0.5000 79.372 4.794 22 3 94 5 
4 5 0.7262 0.8125 0.5625 111.250 6.450 64 6 4 1 0.6625 0.8125 0.5000 111.868 5.446 58 5 382 7 
4 6 0.7394 0.8125 0.6250 189.940 6.920 202 7 88 6 0.6600 0.8125 0.5000 158.386 5.750 190 7 22 3 
4 7 0.7706 0.8125 0.5000 371.950 8.230 394 9 10 2 0.6824 0.8125 0.5000 265.522 6.652 400 9 22 3 
4 8 0.7675 0.8750 0.5625 41.650 4.990 34 5 4 1 0.6820 0.8750 0.5000 73.654 4.584 28 4 382 7 
4 9 0.7412 0.8125 0.5625 81.790 6.020 73 7 10 2 0.6583 0.8125 0.5000 117.322 5.440 46 4 22 3 
4 10 0.7006 0.8125 0.5000 97.630 6.310 112 8 4 1 0.6340 0.8125 0.5000 106.102 5.270 112 8 46 4 
4 0 0.7386 0.9375 0.5000 148.024 6.662 64 6 46 4 0.6614 0.9375 0.5000 135.304 5.551 64 6 94 5 
5 1 0.7631 0.8125 0.5625 229.390 9.790 142 9 34 4 0.6790 0.8125 0.5000 188.285 7.058 232 9 94 5 
5 2 0.7425 0.8125 0.5625 218.020 7.230 268 9 34 5 0.6702 0.8125 0.5000 136.290 5.477 394 9 94 5 
5 3 0.8181 0.9375 0.5625 76.150 6.840 64 6 4 1 0.6897 0.9375 0.5000 130.030 6.087 64 6 46 4 
5 4 0.7238 0.8125 0.5625 60.130 5.950 64 8 52 5 0.6645 0.8125 0.5000 76.165 4.987 64 8 94 5 
5 5 0.7275 0.8125 0.5000 107.620 6.530 58 5 4 1 0.6733 0.8125 0.5000 111.160 5.627 58 5 382 7 
5 6 0.7744 0.8750 0.6875 193.270 7.360 154 6 10 2 0.6791 0.8750 0.5000 164.200 6.018 154 6 22 3 
5 7 0.8025 0.8750 0.6250 397.570 9.120 472 10 193 7 0.7024 0.8750 0.5000 287.530 7.063 472 10 22 3 
5 8 0.7731 0.8750 0.5625 42.220 5.160 34 5 4 1 0.6972 0.8750 0.5000 68.415 4.680 28 4 382 7 
5 9 0.7650 0.8750 0.5000 81.310 6.770 91 8 4 1 0.6760 0.8750 0.5000 111.320 5.662 91 8 22 3 
5 10 0.7306 0.8125 0.6250 86.290 6.760 112 8 19 3 0.6501 0.8125 0.5000 102.800 5.518 112 8 46 4 
5 0 0.7621 0.9375 0.5000 149.197 7.151 64 6 4 1 0.6781 0.9375 0.5000 137.619 5.818 64 6 94 5 
6 1 0.8013 0.8125 0.5625 226.120 9.790 265 11 10 2 0.6964 0.8125 0.5000 193.690 7.449 232 9 94 5 
6 2 0.7856 0.8125 0.6875 277.510 8.480 400 9 40 5 0.6867 0.8125 0.5000 156.464 5.906 394 9 94 5 
6 3 0.8525 0.9375 0.5000 75.010 7.110 64 6 10 2 0.7129 0.9375 0.5000 122.170 6.233 64 6 46 4 
6 4 0.7388 0.8125 0.6250 74.590 7.060 88 7 4 1 0.6751 0.8125 0.5000 75.940 5.283 64 8 94 5 
6 5 0.7531 0.8125 0.5000 87.310 6.340 73 7 4 1 0.6847 0.8125 0.5000 107.753 5.729 58 5 382 7 
6 6 0.7919 0.8750 0.5625 200.080 7.840 154 6 10 2 0.6952 0.8750 0.5000 169.326 6.279 154 6 22 3 
6 7 0.8050 0.8750 0.6250 402.760 9.410 478 10 196 7 0.7171 0.8750 0.5000 303.991 7.399 472 10 22 3 
6 8 0.7975 1.0000 0.5625 48.400 5.820 70 6 7 2 0.7115 1.0000 0.5000 65.556 4.843 70 6 382 7 
6 9 0.7750 0.8750 0.5625 91.810 7.620 85 8 4 1 0.6902 0.8750 0.5000 108.533 5.941 91 8 22 3 
6 10 0.7569 0.8125 0.5000 101.200 7.690 106 8 4 1 0.6654 0.8125 0.5000 102.571 5.829 112 8 46 4 
6 0 0.7857 1.0000 0.5000 158.479 7.716 70 6 10 2 0.6935 1.0000 0.5000 140.599 6.089 70 6 94 5 
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files/1.e[dawdf@delmar 1.e]$ cd ..
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ ls
[0m[38;5;27m1.a[0m  [38;5;27m1.b[0m  [38;5;27m1.c[0m  [38;5;27m1.d[0m  [38;5;27m1.e[0m  [38;5;9mdata_old.tar[0m  [38;5;9mquestion1.tar[0m
]0;dawdf@delmar:~/cgp/lilgp1.02/app/multiplexer/output_files[dawdf@delmar output_files]$ tar -cv [Kf 1.[K[K1.e.y[Ktar 1.*
1.a/
1.a/multi_script1.a.bst
1.a/multi_script1.a.gen
1.a/multi_script1.a.his
1.a/multi_script1.a.prg
1.a/multi_script1.a.stt
1.a/multi_script1.a.sys
1.a/script1.a
1.a/script1.a.tar
1.b/
1.b/multi_script1.b.bst
1.b/multi_script1.b.gen
1.b/multi_script1.b.his
1.b/multi_script1.b.prg
1.b/multi_script1.b.sys
1.b/script1.b
1.b/multi_script1.b.stt
1.c/
1.c/multi_script1.c.bst
1.c/multi_script1.c.gen
1.c/multi_script1.c.his
1.c/multi_script1.c.prg
1.c/multi_script1.c.sys
1.c/script1.c
1.c/multi_script1.c.stt
1.d/
1.d/multi_script1.d.bst
1.d/multi_script1.d.gen
1.d/multi_script1.d.his
1.d/multi_script1.d.prg
1.d/multi_script1.d.sys
1.d/script1.d
1.d/multi_script1.d.stt
1.e/
1.e/script1.e
1.e/multi_script1.e.bst
1.e/multi_script1.e.gen
1.e/multi_script1.e.his
1.e/multi_script1.e.prg
1.e/multi_script1.e.stt
1.e/multi_script1.e.sys
]0;dawdf@delmar:~/cgp/lilg